{
  "data": {
    "apiVersion": {
      "id": "apiversion_c74429ae-fe32-4b48-8b3b-c1a3c199317b",
      "targetGroup": null,
      "__typename": "ApiVersion",
      "endpoints": [
        {
          "id": "apiendpoint_af6ad117-5387-4ffc-926b-b248f30a662b",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.137Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "GET",
          "name": "AllMonitors",
          "route": "/monitors",
          "description": "The `/monitors` endpoint returns a list of all [monitors](https://monitor.getpostman.com/) that are accessible by you.\n\nThe response contains an array of monitors information containing the `name`, `id`, `owner` and `uid` of each monitor.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "All Monitors",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535579,
                "id": "headerparameter_f4bd44e6-689b-4c61-b551-10a557df5cf0",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_af6ad117-5387-4ffc-926b-b248f30a662b",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_a83a70f6-5ed4-4da1-a6bb-ee04b25d8a55",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_af6ad117-5387-4ffc-926b-b248f30a662b",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.077Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "DELETE",
          "name": "DeleteMonitor",
          "route": "/monitors/{monitor_uid}",
          "description": "This endpoint can be used to delete an existing monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete Monitor",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535489,
                "id": "headerparameter_8012c01a-feec-41d0-adc4-0c1f117d4400",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535326,
                "id": "routeparameter_cf71952a-d201-4af1-aad7-abf5c9936313",
                "name": "monitor_uid",
                "endpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_d8e6890d-6da5-4c62-b479-ede612404da0",
              "name": "404",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "The specified monitor does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_26233708-b911-425d-8f80-605a9f214312",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_8871bca3-2bfc-4642-93b0-e29f6ff8d033",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.083Z",
          "group": "apigroup_daef3ba8-4f33-49e5-83cb-aefcc779edf4",
          "method": "GET",
          "name": "AllMocks",
          "route": "/mocks",
          "description": "This endpoint fetches all the mocks that you have created.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "All Mocks",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535521,
                "id": "headerparameter_200fe550-dcc6-4491-b765-f290d66cd4d7",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_8871bca3-2bfc-4642-93b0-e29f6ff8d033",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_b070dca4-929d-4cd8-b383-71ca7b60b8a4",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_8871bca3-2bfc-4642-93b0-e29f6ff8d033",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_e4f91ee8-31a6-42d1-8a9e-eb65cb1141a1",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.085Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "GET",
          "name": "AllCollections",
          "route": "/collections",
          "description": "The `/collections` endpoint returns a list of all [collections](https://www.getpostman.com/docs/collections) that are accessible by you. The list includes your own collections and the collections that you have subscribed to.\n\nThe response contains an array of collection information containing the `name`, `id`, `owner` and `uid` of each collection.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "All Collections",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535544,
                "id": "headerparameter_2488d524-b1e1-4642-a054-9b8ae740d89b",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_e4f91ee8-31a6-42d1-8a9e-eb65cb1141a1",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_f7e37cf1-1587-4c43-be3d-be84fd133904",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_e4f91ee8-31a6-42d1-8a9e-eb65cb1141a1",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_be8fe13e-5614-411b-a25d-33e0b20b13da",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.086Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "GET",
          "name": "SingleCollection",
          "route": "/collections/{collection_uid}",
          "description": "Access the contents of a collection that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single Collection",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535433,
                "id": "headerparameter_26be8ada-9b75-4e1b-b117-35a55e670e65",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_be8fe13e-5614-411b-a25d-33e0b20b13da",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535347,
                "id": "routeparameter_5f633e1c-c92d-4f75-b74e-baaa911f1296",
                "name": "collection_uid",
                "endpoint": "apiendpoint_be8fe13e-5614-411b-a25d-33e0b20b13da",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_cbdb7034-ec3e-468d-aff7-3ccc3037664f",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_be8fe13e-5614-411b-a25d-33e0b20b13da",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_bf2c11dc-4ac9-4f52-b297-a530c234931f",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.089Z",
          "group": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "method": "GET",
          "name": "SingleEnvironment",
          "route": "/environments/{environment_uid}",
          "description": "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single Environment",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535591,
                "id": "headerparameter_cb1782a9-2aa8-4f68-a0c0-31c3a85f00ad",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_bf2c11dc-4ac9-4f52-b297-a530c234931f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535492,
                "id": "routeparameter_a9bd7eaf-8ee0-47b7-9b06-3ae9b951a1cb",
                "name": "environment_uid",
                "endpoint": "apiendpoint_bf2c11dc-4ac9-4f52-b297-a530c234931f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_02a16f27-3789-4a3a-89b1-a91c96f46d5c",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_bf2c11dc-4ac9-4f52-b297-a530c234931f",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.108Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "GET",
          "name": "SingleMonitor",
          "route": "/monitors/{monitor_uid}",
          "description": "This endpoint fetches you basic information about the monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single Monitor",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535610,
                "id": "headerparameter_00521c82-3aaa-4ced-a85b-6351485ded49",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535405,
                "id": "routeparameter_0e0fae69-bc33-46cf-8c69-c1fceced3c04",
                "name": "monitor_uid",
                "endpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_09372dfe-7f18-4f7c-af08-985ddc7ba2a6",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_d016f204-9a13-4cd6-b7c8-4f8ceef23f4e",
              "name": "404",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "The specified monitor does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.120Z",
          "group": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "method": "DELETE",
          "name": "DeleteEnvironment",
          "route": "/environments/{environment_uid}",
          "description": "This endpoint allows you to delete a single environment based on an environment's unique `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete Environment",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535536,
                "id": "headerparameter_9c10a453-6d74-445d-b0c4-af7b7162e592",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535508,
                "id": "routeparameter_15611d6c-a816-4235-99ab-218ce636ac3f",
                "name": "environment_uid",
                "endpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_029471f4-bb25-4cb5-98b4-337e7b963b91",
              "name": "404",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "The specified environment does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_d9b58cfa-6745-4614-a2bc-0aeebff98dd9",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.132Z",
          "group": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "method": "DELETE",
          "name": "DeleteanAPIVersion",
          "route": "/apis/{apiId}/versions/{apiVersionId}",
          "description": "This call deletes an existing API Version having the specified id.  \n\nResponse contains an `version` object with `id` of the API Version which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete an API Version",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535643,
                "id": "headerparameter_32f200b9-627b-4519-916c-f44d5240ede2",
                "name": "x-api-key",
                "endpoint": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535467,
                "id": "routeparameter_a7a5c4a5-25bc-4bf6-ab1e-e273748de214",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535578,
                "id": "routeparameter_98334144-6389-4a89-a389-3c552d30adb7",
                "name": "apiId",
                "endpoint": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_5c306b9c-75eb-475b-bf27-969eefff05df",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
              "examples": {
                "response": {
                  "value": {
                    "version": {
                      "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "version": {
                    "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "title": "Version4",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "DeleteanAPIversion",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_ec5ec902-d39b-4be9-ad15-54d2fada5ec0",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.134Z",
          "group": "apigroup_daef3ba8-4f33-49e5-83cb-aefcc779edf4",
          "method": "DELETE",
          "name": "DeleteMock",
          "route": "/mocks/{mock_uid}",
          "description": "This endpoint allows you to delete an existing mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete Mock",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535551,
                "id": "headerparameter_45fbf862-53b4-4191-85b5-978f4a2636e3",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_ec5ec902-d39b-4be9-ad15-54d2fada5ec0",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535362,
                "id": "routeparameter_2c3c3c0a-a118-41f6-b001-ebf97ab5a2a4",
                "name": "mock_uid",
                "endpoint": "apiendpoint_ec5ec902-d39b-4be9-ad15-54d2fada5ec0",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_3e7dd275-2f4d-45ce-94bd-5f2d0c77e3c8",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_ec5ec902-d39b-4be9-ad15-54d2fada5ec0",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_aa8030f1-2962-4e14-9d40-0c00346186a8",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.140Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "POST",
          "name": "RunaMonitor",
          "route": "/monitors/{monitor_uid}/run",
          "description": "This endpoint will run the monitor instantly and wait for the monitor to run completely. It responds with the run results.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Run a Monitor",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535613,
                "id": "headerparameter_3a0f0ef6-9918-44ac-9125-ea77ccafad84",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_aa8030f1-2962-4e14-9d40-0c00346186a8",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535430,
                "id": "routeparameter_b65f50ce-a119-4d9c-abf8-8bf8453c9f83",
                "name": "monitor_uid",
                "endpoint": "apiendpoint_aa8030f1-2962-4e14-9d40-0c00346186a8",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_53948be9-289c-49c9-b27b-16fb9dcf420b",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_aa8030f1-2962-4e14-9d40-0c00346186a8",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_469739e1-4c97-42dd-9ee1-26e5ee93d483",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.152Z",
          "group": "apigroup_daef3ba8-4f33-49e5-83cb-aefcc779edf4",
          "method": "GET",
          "name": "SingleMock",
          "route": "/mocks/{mock_uid}",
          "description": "This endpoint fetches you the basic information about a single mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single Mock",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535606,
                "id": "headerparameter_f1179289-9ef5-44a3-87b3-e769e04ff1ef",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_469739e1-4c97-42dd-9ee1-26e5ee93d483",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535408,
                "id": "routeparameter_28605a7d-fa77-4b3e-ad2b-60471b381556",
                "name": "mock_uid",
                "endpoint": "apiendpoint_469739e1-4c97-42dd-9ee1-26e5ee93d483",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_3f149022-83a6-4819-8bfb-e0ba17e7bdb1",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_469739e1-4c97-42dd-9ee1-26e5ee93d483",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.154Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "DELETE",
          "name": "DeleteCollection",
          "route": "/collections/{collection_uid}",
          "description": "This endpoint allows you to delete an existing collection.\n\nOn successful deletion of the collection, the response returns the `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete Collection",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535486,
                "id": "headerparameter_d6a0f2eb-8729-4041-a5e8-868530e27a94",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535439,
                "id": "routeparameter_b26c0cb8-94f2-46be-9de2-d3869c1233df",
                "name": "collection_uid",
                "endpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_e7ac98ee-e3aa-4686-a897-5995ac8e48b0",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_8b5aaaeb-a329-4c58-aaa2-3be67dda3f8c",
              "name": "404",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "details": {
                        "id": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                        "item": "collection"
                      },
                      "message": "The specified item does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.159Z",
          "group": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "method": "GET",
          "name": "GetanAPIVersion",
          "route": "/apis/{apiId}/versions/{apiVersionId}",
          "description": "This call fetches details about the specified API Version.\n\nThe response will contain a `version` object which would contain all the details of the API Version.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Get an API Version",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535491,
                "id": "headerparameter_886da49a-b99c-4bf6-9f59-08a3bdb721fc",
                "name": "x-api-key",
                "endpoint": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535437,
                "id": "routeparameter_39a0e5eb-ca5f-479e-8e94-8dfe44da4097",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535535,
                "id": "routeparameter_17a3e9c9-bce8-482a-8496-36fbf2c78280",
                "name": "apiId",
                "endpoint": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_bfd2d752-cf16-45e2-88ca-01e189c0e05e",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"createdBy\": \"5665\",\n    \"updatedBy\": \"5665\",\n    \"createdAt\": \"2019-07-21T16:31:15Z\",\n    \"updatedAt\": \"2019-07-21T16:31:15Z\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
              "examples": {
                "response": {
                  "value": {
                    "version": {
                      "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                      "createdAt": "2019-07-21T16:31:15Z",
                      "createdBy": "5665",
                      "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                      "name": "0.1",
                      "schema": [
                        "3484cd1e-e00d-4c39-aea4-539663afe898"
                      ],
                      "updatedAt": "2019-07-21T16:31:15Z",
                      "updatedBy": "5665"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "version": {
                    "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                    "createdAt": "2019-07-21T16:31:15Z",
                    "createdBy": "5665",
                    "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                    "name": "0.1",
                    "schema": [
                      "3484cd1e-e00d-4c39-aea4-539663afe898"
                    ],
                    "updatedAt": "2019-07-21T16:31:15Z",
                    "updatedBy": "5665"
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                      "createdAt": "2019-07-21T16:31:15Z",
                      "createdBy": "5665",
                      "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                      "name": "0.1",
                      "schema": [
                        "3484cd1e-e00d-4c39-aea4-539663afe898"
                      ],
                      "updatedAt": "2019-07-21T16:31:15Z",
                      "updatedBy": "5665"
                    },
                    "properties": {
                      "api": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "updatedBy": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "api",
                      "schema",
                      "createdBy",
                      "updatedBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Version5",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "GetanAPIversion",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.165Z",
          "group": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "method": "GET",
          "name": "Singleworkspace",
          "route": "/workspaces/{workspace_id}",
          "description": "Access the contents of a workspace that is accessible to you using its id (`id`). Includes the collections, environments, mocks and monitors of that workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single workspace",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535452,
                "id": "headerparameter_f9c204d9-793d-47f6-af09-a41bf90e29cb",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535513,
                "id": "routeparameter_ab9a3b0a-6206-4a73-9e4b-cf473aecd66b",
                "name": "workspace_id",
                "endpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_643d3bea-6a25-419f-a888-624573f930a9",
              "name": "404",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "Instance not found in the database.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "message": "The specified workspace does not exist.",
                    "name": "instanceNotFoundError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    },
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message"
                    ],
                    "title": "Error",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Specifiedworkspace/entitiesdonotexist",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_fcbd5204-bea2-4de4-b7c7-b5b32fa83326",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\",\n    \"description\": \"Demos.\",\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      },\n      {\n        \"id\": \"356fe068-a0f8-4f31-b34d-d12149eac681\",\n        \"name\": \"Mock demo - response code\",\n        \"uid\": \"1234-356fe068-a0f8-4f31-b34d-d12149eac681\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      },\n      {\n        \"id\": \"24c45c84-5147-4c15-bb9a-c3186b81d3cc\",\n        \"name\": \"Mock Demo - response code\",\n        \"uid\": \"1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc\"\n      }\n    ]\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
              "examples": {
                "response": {
                  "value": {
                    "workspace": {
                      "collections": [
                        {
                          "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                          "name": "Mock demo - collection",
                          "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                        },
                        {
                          "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                          "name": "Mock demo - response code",
                          "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                        }
                      ],
                      "description": "Demos.",
                      "environments": [
                        {
                          "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                          "name": "Mock demo - CNX",
                          "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                        },
                        {
                          "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                          "name": "Mock Demo - response code",
                          "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                        }
                      ],
                      "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                      "name": "Demo workspace",
                      "type": "personal"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "workspace": {
                    "collections": [
                      {
                        "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                        "name": "Mock demo - collection",
                        "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                      },
                      {
                        "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                        "name": "Mock demo - response code",
                        "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                      }
                    ],
                    "description": "Demos.",
                    "environments": [
                      {
                        "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                        "name": "Mock demo - CNX",
                        "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                      },
                      {
                        "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                        "name": "Mock Demo - response code",
                        "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                      }
                    ],
                    "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                    "name": "Demo workspace",
                    "type": "personal"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "collections": [
                        {
                          "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                          "name": "Mock demo - collection",
                          "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                        },
                        {
                          "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                          "name": "Mock demo - response code",
                          "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                        }
                      ],
                      "description": "Demos.",
                      "environments": [
                        {
                          "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                          "name": "Mock demo - CNX",
                          "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                        },
                        {
                          "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                          "name": "Mock Demo - response code",
                          "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                        }
                      ],
                      "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                      "name": "Demo workspace",
                      "type": "personal"
                    },
                    "properties": {
                      "collections": {
                        "items": {
                          "example": {
                            "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                            "name": "Sample Collection",
                            "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Collection3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "environments": {
                        "items": {
                          "example": {
                            "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                            "name": "Sample Environment Name (required)",
                            "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Environment3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "description",
                      "collections",
                      "environments"
                    ],
                    "title": "Workspace1",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "ValidResponse5",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_b4d53ccc-87c7-465b-a7a9-d8af6e93923f",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.175Z",
          "group": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "method": "GET",
          "name": "SingleAPI",
          "route": "/apis/{apiId}",
          "description": "This call fetches a single API having the specified id.\n\nResponse contains an `api` object with all the details related to the queried API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Single API",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535549,
                "id": "headerparameter_40d3021b-d00d-4ef4-8cc9-f3d13ae58257",
                "name": "x-api-key",
                "endpoint": "apiendpoint_b4d53ccc-87c7-465b-a7a9-d8af6e93923f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535471,
                "id": "routeparameter_aebcf976-3fb9-4f7d-ab78-c0b84511b6a3",
                "name": "apiId",
                "endpoint": "apiendpoint_b4d53ccc-87c7-465b-a7a9-d8af6e93923f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_7319a59c-8c39-4b5e-bff6-fec0016a8b64",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is a description.This is a description.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_b4d53ccc-87c7-465b-a7a9-d8af6e93923f",
              "examples": {
                "response": {
                  "value": {
                    "api": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is a description.This is a description.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "api": {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is a description.This is a description.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is supposed to handle markdown *descriptions*.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "summary",
                      "description",
                      "createdBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Api1",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "GetsingleAPI",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.177Z",
          "group": "apigroup_ed6ce896-be5e-46d7-86b7-13402299fbf6",
          "method": "GET",
          "name": "Getlinkedrelations",
          "route": "/apis/{apiId}/versions/{apiVersionId}/relations",
          "description": "This call fetches all the relations which are linked in the specified API Version along with their details.\n\nThe response will contain a `relations` object which would contain all the relation types which are linked to the apiversion. Each of the relation type will be an object which would contain details about the relations of this type. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Get linked relations",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535632,
                "id": "headerparameter_d8a30a17-cb6c-4c0c-ad32-784125c60d87",
                "name": "x-api-key",
                "endpoint": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535415,
                "id": "routeparameter_4f782dc1-78fb-48fc-a374-7bcec4b5bcf8",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535436,
                "id": "routeparameter_e0e4c5c7-61d3-49b7-aa16-f732efbd771a",
                "name": "apiId",
                "endpoint": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_1b033cd3-f996-4ceb-b3f4-961e4a61defc",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\",\n        \"updatedAt\": \"2019-08-20T10:18:13Z\"\n      }\n    }\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
              "examples": {
                "response": {
                  "value": {
                    "relations": {
                      "contracttest": {
                        "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        }
                      },
                      "integrationtest": {
                        "521b0486-ab91-4d3a-9189-43c9380a0533": {
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39Z"
                        },
                        "a236b715-e682-460b-97b6-c1db24f7612e": {
                          "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        }
                      },
                      "mock": {
                        "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                          "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                          "name": "Mock",
                          "updatedAt": "2019-08-20T10:18:13Z",
                          "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                        }
                      }
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "relations": {
                    "contracttest": {
                      "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                        "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name": "C test",
                        "updatedAt": "2019-08-29T10:18:11Z"
                      }
                    },
                    "integrationtest": {
                      "521b0486-ab91-4d3a-9189-43c9380a0533": {
                        "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name": "C1",
                        "updatedAt": "2019-08-29T11:40:39Z"
                      },
                      "a236b715-e682-460b-97b6-c1db24f7612e": {
                        "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                        "name": "C test",
                        "updatedAt": "2019-08-29T10:18:11Z"
                      }
                    },
                    "mock": {
                      "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                        "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                        "name": "Mock",
                        "updatedAt": "2019-08-20T10:18:13Z",
                        "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                      }
                    }
                  }
                },
                "properties": {
                  "relations": {
                    "example": {
                      "contracttest": {
                        "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        }
                      },
                      "integrationtest": {
                        "521b0486-ab91-4d3a-9189-43c9380a0533": {
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39Z"
                        },
                        "a236b715-e682-460b-97b6-c1db24f7612e": {
                          "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        }
                      },
                      "mock": {
                        "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                          "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                          "name": "Mock",
                          "updatedAt": "2019-08-20T10:18:13Z",
                          "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                        }
                      }
                    },
                    "properties": {
                      "contracttest": {
                        "example": {
                          "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                            "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "name": "C test",
                            "updatedAt": "2019-08-29T10:18:11Z"
                          }
                        },
                        "properties": {
                          "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                            "example": {
                              "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                              "name": "C test",
                              "updatedAt": "2019-08-29T10:18:11Z"
                            },
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "updatedAt"
                            ],
                            "title": "2a9b8fa888b74b8683728e3f6f6e07f2",
                            "type": "object"
                          }
                        },
                        "required": [
                          "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                        ],
                        "title": "Contracttest",
                        "type": "object"
                      },
                      "integrationtest": {
                        "example": {
                          "521b0486-ab91-4d3a-9189-43c9380a0533": {
                            "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                            "name": "C1",
                            "updatedAt": "2019-08-29T11:40:39Z"
                          },
                          "a236b715-e682-460b-97b6-c1db24f7612e": {
                            "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                            "name": "C test",
                            "updatedAt": "2019-08-29T10:18:11Z"
                          }
                        },
                        "properties": {
                          "521b0486-ab91-4d3a-9189-43c9380a0533": {
                            "example": {
                              "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                              "name": "C1",
                              "updatedAt": "2019-08-29T11:40:39Z"
                            },
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "updatedAt"
                            ],
                            "title": "521b0486Ab914d3a918943c9380a0533",
                            "type": "object"
                          },
                          "a236b715-e682-460b-97b6-c1db24f7612e": {
                            "example": {
                              "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                              "name": "C test",
                              "updatedAt": "2019-08-29T10:18:11Z"
                            },
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "updatedAt"
                            ],
                            "title": "A236b715E682460b97b6C1db24f7612e",
                            "type": "object"
                          }
                        },
                        "required": [
                          "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "a236b715-e682-460b-97b6-c1db24f7612e"
                        ],
                        "title": "Integrationtest",
                        "type": "object"
                      },
                      "mock": {
                        "example": {
                          "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                            "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                            "name": "Mock",
                            "updatedAt": "2019-08-20T10:18:13Z",
                            "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                          }
                        },
                        "properties": {
                          "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                            "example": {
                              "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                              "name": "Mock",
                              "updatedAt": "2019-08-20T10:18:13Z",
                              "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                            },
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "url",
                              "updatedAt"
                            ],
                            "title": "4ccd755f2c80481bA26249b55e12f5e1",
                            "type": "object"
                          }
                        },
                        "required": [
                          "4ccd755f-2c80-481b-a262-49b55e12f5e1"
                        ],
                        "title": "Mock7",
                        "type": "object"
                      }
                    },
                    "required": [
                      "contracttest",
                      "integrationtest",
                      "mock"
                    ],
                    "title": "Relations1",
                    "type": "object"
                  }
                },
                "required": [
                  "relations"
                ],
                "title": "GetlinkedrelationsforanAPIversion",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.178Z",
          "group": "apigroup_39fda286-cc72-44ff-bd11-107c5fbf330c",
          "method": "GET",
          "name": "GetSchema",
          "route": "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}",
          "description": "This call fetches a single schema having the specified id.\n\nResponse contains a `schema` object with all the details related to the schema, namely, `id`, `language`, `type`, `schema` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Get Schema",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535578,
                "id": "headerparameter_402cddbe-6410-4d86-80c9-13d9f71e2aa2",
                "name": "x-api-key",
                "endpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535433,
                "id": "routeparameter_3bebb748-44bf-4377-becd-7f24c51ac563",
                "name": "apiId",
                "endpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535433,
                "id": "routeparameter_5590e36d-dcd3-49e3-a304-d4a2ff80d0b5",
                "name": "schemaId",
                "endpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535434,
                "id": "routeparameter_8518962f-ed27-408e-a190-180b7c552050",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_3587dcbb-6129-4f49-b0d8-e9ea8761f6e0",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
              "examples": {
                "response": {
                  "value": {
                    "schema": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "schema": {
                    "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                    "language": "yaml",
                    "type": "openapi3",
                    "updateBy": "5665",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "schema": {
                    "example": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "apiVersion": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updateBy": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "language",
                      "apiVersion",
                      "type",
                      "createdBy",
                      "updateBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Schema3",
                    "type": "object"
                  }
                },
                "required": [
                  "schema"
                ],
                "title": "Getschema",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_0cad2af0-c792-4c8f-833e-cea56c626084",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.202Z",
          "group": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "method": "DELETE",
          "name": "DeleteanAPI",
          "route": "/apis/{apiId}",
          "description": "This call deletes an existing API having the specified id.  \n\nResponse contains an `api` object with `id` of the API which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete an API",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535491,
                "id": "headerparameter_09be3a5a-5d0d-491c-952c-8dff52d87e1a",
                "name": "x-api-key",
                "endpoint": "apiendpoint_0cad2af0-c792-4c8f-833e-cea56c626084",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535608,
                "id": "routeparameter_92635220-ad4d-4130-98d0-e6f6f69b44fe",
                "name": "apiId",
                "endpoint": "apiendpoint_0cad2af0-c792-4c8f-833e-cea56c626084",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_f67824fc-7f9d-4259-b53d-c1301ada7680",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_0cad2af0-c792-4c8f-833e-cea56c626084",
              "examples": {
                "response": {
                  "value": {
                    "api": {
                      "id": "387c2863-6ee3-4a56-8210-225f774edade"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "api": {
                    "id": "387c2863-6ee3-4a56-8210-225f774edade"
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "id": "387c2863-6ee3-4a56-8210-225f774edade"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "title": "Api4",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "DeleteanAPI",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_fc11b207-3800-4292-a61d-3ba8a1e046ab",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.229Z",
          "group": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "method": "DELETE",
          "name": "DeleteWorkspace",
          "route": "/workspaces/{workspace_id}",
          "description": "This endpoint allows you to delete an existing workspace.\n\nOn successful deletion of the workspace, the response returns the `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Delete Workspace",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535337,
                "id": "routeparameter_c704c3a4-398a-4c54-931b-a9cbedd9dce8",
                "name": "workspace_id",
                "endpoint": "apiendpoint_fc11b207-3800-4292-a61d-3ba8a1e046ab",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_2721339d-ffbb-4735-8cf5-344a38c55132",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_fc11b207-3800-4292-a61d-3ba8a1e046ab",
              "examples": {
                "response": {
                  "value": {
                    "workspace": {
                      "id": "{{workspace_id}}"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "workspace": {
                    "id": "{{workspace_id}}"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "id": "{{workspace_id}}"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "title": "Workspace6",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "SuccessfulResponse9",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_02627dfe-a4e7-4cea-92f6-145ea4d6ac64",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.230Z",
          "group": "apigroup_399d3ff0-e87b-462e-bd62-67dfac409060",
          "method": "GET",
          "name": "APIKeyOwner",
          "route": "/me",
          "description": "The `/me` endpoint allows you to fetch relevant information pertaining to the API Key being used.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "API Key Owner",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535631,
                "id": "headerparameter_385258db-b3c4-473d-8875-e656901a611f",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_02627dfe-a4e7-4cea-92f6-145ea4d6ac64",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_3b1ea1db-0acd-4363-88d8-3d652c1e0846",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_02627dfe-a4e7-4cea-92f6-145ea4d6ac64",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_2b52f79d-79ec-48f5-ab59-3fd8942be3dd",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.236Z",
          "group": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "method": "GET",
          "name": "GetAllAPIVersions",
          "route": "/apis/{apiId}/versions",
          "description": "This call fetches details about the all the API Versions in the specified API.\n\nThe response will contain an array `versions` object which would be a list of all the API Version along with their details.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Get All API Versions",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535596,
                "id": "headerparameter_0eca7574-d361-47c3-b28a-2f88bb1482a5",
                "name": "x-api-key",
                "endpoint": "apiendpoint_2b52f79d-79ec-48f5-ab59-3fd8942be3dd",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535409,
                "id": "routeparameter_36d13d7a-fae2-41a1-ad2c-196724a1bc5b",
                "name": "apiId",
                "endpoint": "apiendpoint_2b52f79d-79ec-48f5-ab59-3fd8942be3dd",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_a5c79bd5-6df1-4b9b-b31d-44afffdf8f63",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"versions\": [\n    {\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"description\": \"Description\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"00932d3b-20f1-454f-a77e-38b4023163ea\",\n      \"name\": \"0.2\",\n      \"summary\": \"Summary\",\n      \"description\": \"Description\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_2b52f79d-79ec-48f5-ab59-3fd8942be3dd",
              "examples": {
                "response": {
                  "value": {
                    "versions": [
                      {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "Description",
                        "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                        "name": "0.1",
                        "summary": "Summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      },
                      {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "Description",
                        "id": "00932d3b-20f1-454f-a77e-38b4023163ea",
                        "name": "0.2",
                        "summary": "Summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "example": {
                  "versions": [
                    {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "Description",
                      "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                      "name": "0.1",
                      "summary": "Summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "Description",
                      "id": "00932d3b-20f1-454f-a77e-38b4023163ea",
                      "name": "0.2",
                      "summary": "Summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  ]
                },
                "properties": {
                  "versions": {
                    "items": {
                      "example": {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "Description",
                        "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                        "name": "0.1",
                        "summary": "Summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      },
                      "properties": {
                        "createdAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "summary",
                        "description",
                        "createdBy",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "Version6",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "versions"
                ],
                "title": "GetAllAPIversions",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_6fa345b3-82d3-46f7-b210-98f13fdc2c82",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.241Z",
          "group": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "method": "GET",
          "name": "Allworkspaces",
          "route": "/workspaces",
          "description": "The `/workspaces` endpoint returns a list of all [workspaces](https://www.getpostman.com/docs/v6/postman/workspaces/intro_to_workspaces) that is accessible by you. The list includes your own workspaces and the workspaces that you have access to.\n\nThe response contains an array of collection information containing the `name`, `id`, and `type` of each workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "All workspaces",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535618,
                "id": "headerparameter_00deab9e-aa42-4214-b660-29504207afbe",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_6fa345b3-82d3-46f7-b210-98f13fdc2c82",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_7bbf529c-6f1b-4ddb-b893-e69f66cc0428",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    },\n    {\n      \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n      \"name\": \"Team workspace\",\n      \"type\": \"team\"\n    }\n  ]\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_6fa345b3-82d3-46f7-b210-98f13fdc2c82",
              "examples": {
                "response": {
                  "value": {
                    "workspaces": [
                      {
                        "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                        "name": "My Workspace",
                        "type": "personal"
                      },
                      {
                        "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                        "name": "Team workspace",
                        "type": "team"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "example": {
                  "workspaces": [
                    {
                      "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                      "name": "My Workspace",
                      "type": "personal"
                    },
                    {
                      "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                      "name": "Team workspace",
                      "type": "team"
                    }
                  ]
                },
                "properties": {
                  "workspaces": {
                    "items": {
                      "example": {
                        "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                        "name": "My Workspace",
                        "type": "personal"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "type"
                      ],
                      "title": "Workspace",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "workspaces"
                ],
                "title": "ValidResponse4",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_96e59bfe-d47e-4edd-9126-dfce910f0e3d",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.253Z",
          "group": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "method": "GET",
          "name": "AllEnvironments",
          "route": "/environments",
          "description": "The `/environments` endpoint returns a list of all [environments](https://www.getpostman.com/docs/environments) that belong to you..\n\nThe response contains an array of environments' information containing the `name`, `id`, `owner` and `uid` of each environment.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "All Environments",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535481,
                "id": "headerparameter_3af80a94-b039-48e8-ac88-ae6479228bb7",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_96e59bfe-d47e-4edd-9126-dfce910f0e3d",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_07295a8a-b9e5-4063-a08f-4440f230be6a",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_96e59bfe-d47e-4edd-9126-dfce910f0e3d",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.075Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "POST",
          "name": "CreateaFork",
          "route": "/collections/fork/{collection_uid}",
          "description": "This endpoint allows you to create a fork from an existing collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id`, `uid` along with `fork` information.\n\nYou can also specify the context of a workspace to fork a collection in by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create a Fork",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535485,
                "updatedAt": 1586215376976,
                "id": "headerparameter_6de78f83-f010-443a-a916-ffd9a8fafb6f",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535359,
                "id": "routeparameter_89f9c95c-0368-4114-81e1-ab1f8566198f",
                "name": "workspace",
                "endpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
                "querystring": true,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "description": "Workspace ID is required to create a fork",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535371,
                "id": "routeparameter_28c1c437-6346-400c-b731-0ff21dfd10c2",
                "name": "collection_uid",
                "endpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_b4c23260-34e5-4614-a29c-d187e67f9ce9",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_67242d7f-dfc0-4bb4-be4a-f1249ac600c6",
              "name": "CreateaFork",
              "format": "JSON",
              "body": "{\n  \"name\": \"Fork name\"\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
              "examples": {},
              "schema": {
                "example": {
                  "name": "Fork name"
                },
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "CreateaForkRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.183Z",
          "group": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "method": "POST",
          "name": "CreateAPI",
          "route": "/apis",
          "description": "This call creates a new API with a default API Version.  \n\nRequest body should contain an `api` object which should atleast have a property `name`.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create API",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535656,
                "updatedAt": 1586215388613,
                "id": "headerparameter_383545e3-23b0-44a9-b5bb-7b88c27e3142",
                "name": "x-api-key",
                "endpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535584,
                "id": "routeparameter_ff89b860-b3a4-4f8b-8b2a-73bb2b31bf57",
                "name": "workspace",
                "endpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
                "querystring": true,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "description": "Workspace in which the API is to be created",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_7063d7f9-33e0-450c-bd8c-37a389bb0c93",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
              "examples": {
                "response": {
                  "value": {
                    "api": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is supposed to handle markdown *descriptions*.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "api": {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is supposed to handle markdown *descriptions*.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is supposed to handle markdown *descriptions*.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "summary",
                      "description",
                      "createdBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Api1",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "CreateAPI",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_1fc4c797-9648-47aa-bc68-7a6a8ba2079e",
              "name": "CreateAPI",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"name\": \"Sync Service API\",\n    \"summary\": \"This is supposed to be a short summary.\",\n    \"description\": \"This is description.\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
              "examples": {},
              "schema": {
                "example": {
                  "api": {
                    "description": "This is description.",
                    "name": "Sync Service API",
                    "summary": "This is supposed to be a short summary."
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "description": "This is description.",
                      "name": "Sync Service API",
                      "summary": "This is supposed to be a short summary."
                    },
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "summary",
                      "description"
                    ],
                    "title": "Api",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "CreateAPIRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.111Z",
          "group": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "method": "POST",
          "name": "CreateAPIVersion",
          "route": "/apis/{apiId}/versions",
          "description": "This call creates a new API version in the specified API.  \n\nRequest body should contain a `version` object which should have fields:\n\n<table>\n<tr>\n\t<td>name</td>\n\t<td>Required. Name of the API Version</td>\n</tr>\n<tr>\n\t<td>source</td>\n\t<td>\n\t\tIf specified, it will copy the contents of the specified api version to create a new api verison.\n\t\t<table>\n\t\t\t<tr>\n\t\t\t\t<td>id</td>\n\t\t\t\t<td>Required. Id of the apiversion from where the details are to be copied</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>schema</td>\n\t\t\t\t<td>Boolean. If true then copies the schema from the specified api version</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>relations</td>\n\t\t\t\t<td>Object. {\"&lt;relationType&gt;\": true/false}.  \n\t\t\t\t\tAllowed relation types are `mock`, `monitor`, `documentation`, `contracttest`, `integrationtest`, `testsuite`, `environment`\n\t\t\t\tRelation types which should be copied over to the new api verison</td>\n\t\t\t</tr>\n\t\t</table>\n\t</td>\n</tr>\n</table>\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create API Version",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535548,
                "updatedAt": 1586215400557,
                "id": "headerparameter_66ffbef3-0c3a-4782-9468-7e756ddf3192",
                "name": "x-api-key",
                "endpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535465,
                "id": "routeparameter_c076eddf-56d8-4a97-ab6a-e17bf0c2a227",
                "name": "apiId",
                "endpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_96e158cb-5d2b-4c4b-98a3-b5ed8dc10a8c",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\",\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
              "examples": {
                "response": {
                  "value": {
                    "version": {
                      "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                      "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                      "name": "1.0"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "version": {
                    "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                    "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                    "name": "1.0"
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                      "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                      "name": "1.0"
                    },
                    "properties": {
                      "api": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "api"
                    ],
                    "title": "Version1",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "CreateAPIversion",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_9ed20274-8845-4bb2-8205-ee39515cbcaf",
              "name": "CreateAPIVersion",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"name\": \"1.0\",\n    \"source\": {\n      \"id\": \"{{apiVersionId}}\",\n      \"schema\": true,\n      \"relations\": {\n        \"monitor\": true,\n        \"mock\": true,\n        \"documentation\": true\n      }\n    }\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
              "examples": {},
              "schema": {
                "example": {
                  "version": {
                    "name": "1.0",
                    "source": {
                      "id": "{{apiVersionId}}",
                      "relations": {
                        "documentation": true,
                        "mock": true,
                        "monitor": true
                      },
                      "schema": true
                    }
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "name": "1.0",
                      "source": {
                        "id": "{{apiVersionId}}",
                        "relations": {
                          "documentation": true,
                          "mock": true,
                          "monitor": true
                        },
                        "schema": true
                      }
                    },
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "source": {
                        "example": {
                          "id": "{{apiVersionId}}",
                          "relations": {
                            "documentation": true,
                            "mock": true,
                            "monitor": true
                          },
                          "schema": true
                        },
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "relations": {
                            "example": {
                              "documentation": true,
                              "mock": true,
                              "monitor": true
                            },
                            "properties": {
                              "documentation": {
                                "type": "boolean"
                              },
                              "mock": {
                                "type": "boolean"
                              },
                              "monitor": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "monitor",
                              "mock",
                              "documentation"
                            ],
                            "title": "Relations",
                            "type": "object"
                          },
                          "schema": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "schema",
                          "relations"
                        ],
                        "title": "Source",
                        "type": "object"
                      }
                    },
                    "required": [
                      "name",
                      "source"
                    ],
                    "title": "Version",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "CreateAPIVersionRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.098Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "POST",
          "name": "CreateCollection",
          "route": "/collections",
          "description": "This endpoint allows you to create collections using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and the `uid`.\n\nYou can also specify the context of a workspace to create a collection in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Collection",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535436,
                "updatedAt": 1586215412129,
                "id": "headerparameter_9e4db01e-d71b-4a9e-a9aa-bf95230c756e",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_ff2920db-bfcb-4ed3-833d-aa6d5b6350ee",
              "name": "400",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_d4694432-45ee-4c64-a028-fc4796ec01c2",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_50d61d4d-9832-41ea-a879-054f5dc3a5ef",
              "name": "CreateCollection",
              "format": "JSON",
              "body": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
              "examples": {},
              "schema": {
                "example": {
                  "collection": {
                    "info": {
                      "description": "This is just a sample collection.",
                      "name": "Sample Collection {{$randomInt}}",
                      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                    },
                    "item": [
                      {
                        "item": [
                          {
                            "name": "Sample POST Request",
                            "request": {
                              "body": {
                                "mode": "raw",
                                "raw": "{\"data\": \"123\"}"
                              },
                              "description": "This is a sample POST Request",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "method": "POST",
                              "url": "https://postman-echo.com/post"
                            }
                          }
                        ],
                        "name": "This is a folder"
                      },
                      {
                        "name": "Sample GET Request",
                        "request": {
                          "description": "This is a sample GET Request",
                          "method": "GET",
                          "url": "https://postman-echo/get"
                        }
                      }
                    ]
                  }
                },
                "properties": {
                  "collection": {
                    "example": {
                      "info": {
                        "description": "This is just a sample collection.",
                        "name": "Sample Collection {{$randomInt}}",
                        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                      },
                      "item": [
                        {
                          "item": [
                            {
                              "name": "Sample POST Request",
                              "request": {
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\"data\": \"123\"}"
                                },
                                "description": "This is a sample POST Request",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "url": "https://postman-echo.com/post"
                              }
                            }
                          ],
                          "name": "This is a folder"
                        },
                        {
                          "name": "Sample GET Request",
                          "request": {
                            "description": "This is a sample GET Request",
                            "method": "GET",
                            "url": "https://postman-echo/get"
                          }
                        }
                      ]
                    },
                    "properties": {
                      "info": {
                        "example": {
                          "description": "This is just a sample collection.",
                          "name": "Sample Collection {{$randomInt}}",
                          "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                        },
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "schema"
                        ],
                        "title": "Info1",
                        "type": "object"
                      },
                      "item": {
                        "items": {
                          "example": {
                            "item": [
                              {
                                "name": "Sample POST Request",
                                "request": {
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\"data\": \"123\"}"
                                  },
                                  "description": "This is a sample POST Request",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "method": "POST",
                                  "url": "https://postman-echo.com/post"
                                }
                              }
                            ],
                            "name": "This is a folder"
                          },
                          "properties": {
                            "item": {
                              "items": {
                                "example": {
                                  "name": "Sample POST Request",
                                  "request": {
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\"data\": \"123\"}"
                                    },
                                    "description": "This is a sample POST Request",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "url": "https://postman-echo.com/post"
                                  }
                                },
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "request": {
                                    "example": {
                                      "body": {
                                        "mode": "raw",
                                        "raw": "{\"data\": \"123\"}"
                                      },
                                      "description": "This is a sample POST Request",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/json"
                                        }
                                      ],
                                      "method": "POST",
                                      "url": "https://postman-echo.com/post"
                                    },
                                    "properties": {
                                      "body": {
                                        "example": {
                                          "mode": "raw",
                                          "raw": "{\"data\": \"123\"}"
                                        },
                                        "properties": {
                                          "mode": {
                                            "type": "string"
                                          },
                                          "raw": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "mode",
                                          "raw"
                                        ],
                                        "title": "Body1",
                                        "type": "object"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "header": {
                                        "items": {
                                          "example": {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                          },
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "value"
                                          ],
                                          "title": "Header1",
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "method": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "method",
                                      "header",
                                      "body",
                                      "description"
                                    ],
                                    "title": "Request1",
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "name",
                                  "request"
                                ],
                                "title": "Item2",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "type": "string"
                            },
                            "request": {
                              "example": {
                                "description": "This is a sample GET Request",
                                "method": "GET",
                                "url": "https://postman-echo/get"
                              },
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "method",
                                "description"
                              ],
                              "title": "Request2",
                              "type": "object"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Item1",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "info",
                      "item"
                    ],
                    "title": "Collection2",
                    "type": "object"
                  }
                },
                "required": [
                  "collection"
                ],
                "title": "CreateCollectionRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.076Z",
          "group": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "method": "POST",
          "name": "CreateEnvironment",
          "route": "/environments",
          "description": "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Environment",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535637,
                "updatedAt": 1586215423813,
                "id": "headerparameter_0ddbd48a-68c4-41db-bf42-26e8e14d3b15",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_cdbc238b-963f-4167-a672-2ccb91d1ccde",
              "name": "400",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "Missing required property: environment",
                      "name": "malformedRequestError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "message": "The specified workspace does not exist.",
                    "name": "instanceNotFoundError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    },
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message"
                    ],
                    "title": "Error",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Specifiedworkspace/entitiesdonotexist",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_f2436ffe-08cd-4baa-bb65-663fae084772",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
              "examples": {
                "response": {
                  "value": {
                    "environment": {
                      "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                      "name": "Sample Environment Name (required)",
                      "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "environment": {
                    "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                    "name": "Sample Environment Name (required)",
                    "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                  }
                },
                "properties": {
                  "environment": {
                    "example": {
                      "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                      "name": "Sample Environment Name (required)",
                      "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "uid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "uid"
                    ],
                    "title": "Environment3",
                    "type": "object"
                  }
                },
                "required": [
                  "environment"
                ],
                "title": "CreateEnvironmentinaWorkspace",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_ebb16d5b-4241-42dd-a7e1-93e17bc97cd5",
              "name": "CreateEnvironment",
              "format": "JSON",
              "body": "{\n  \"environment\": {\n    \"name\": \"Sample Environment Name (required)\",\n    \"values\": [\n      {\n        \"key\": \"variable_name_1\",\n        \"value\": \"The value of the variable\"\n      },\n      {\n        \"key\": \"variable_name_2\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
              "examples": {},
              "schema": {
                "example": {
                  "environment": {
                    "name": "Sample Environment Name (required)",
                    "values": [
                      {
                        "key": "variable_name_1",
                        "value": "The value of the variable"
                      },
                      {
                        "key": "variable_name_2",
                        "value": ""
                      }
                    ]
                  }
                },
                "properties": {
                  "environment": {
                    "example": {
                      "name": "Sample Environment Name (required)",
                      "values": [
                        {
                          "key": "variable_name_1",
                          "value": "The value of the variable"
                        },
                        {
                          "key": "variable_name_2",
                          "value": ""
                        }
                      ]
                    },
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "example": {
                            "key": "variable_name_1",
                            "value": "The value of the variable"
                          },
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ],
                          "title": "Value1",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "name",
                      "values"
                    ],
                    "title": "Environment2",
                    "type": "object"
                  }
                },
                "required": [
                  "environment"
                ],
                "title": "CreateEnvironmentRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.169Z",
          "group": "apigroup_daef3ba8-4f33-49e5-83cb-aefcc779edf4",
          "method": "POST",
          "name": "CreateMock",
          "route": "/mocks",
          "description": "This endpoint allows you to create a mock on a collection. You can also provide an environment UID to resolve any environment variables in the collection.\n\nYou can also specify the context of a workspace to create a mock in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Mock",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535615,
                "updatedAt": 1586215439299,
                "id": "headerparameter_084d8e62-4398-4cb2-8c6e-d246aa7b0bd5",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_5cecc549-5a7c-4234-b2a7-ed6e823d2874",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_83415937-0a70-4b05-bc02-09de8e99da63",
              "name": "CreateMock",
              "format": "JSON",
              "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
              "examples": {},
              "schema": {
                "example": {
                  "mock": {
                    "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                    "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                  }
                },
                "properties": {
                  "mock": {
                    "example": {
                      "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                      "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                    },
                    "properties": {
                      "collection": {
                        "type": "string"
                      },
                      "environment": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "collection",
                      "environment"
                    ],
                    "title": "Mock2",
                    "type": "object"
                  }
                },
                "required": [
                  "mock"
                ],
                "title": "CreateMockRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.235Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "POST",
          "name": "CreateMonitor",
          "route": "/monitors",
          "description": "This endpoint allows you to create a monitor.\n\nSome sample `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\nYou can also specify the context of a workspace to create a monitor in directly by passing the `workspace` as a query param.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Monitor",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535617,
                "updatedAt": 1586215450099,
                "id": "headerparameter_59bd3ead-55b5-4b13-8bc0-ff2c50e77298",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_24c598cc-417f-4bbb-bca2-9c73d7e42696",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
              "examples": {
                "response": {
                  "value": {
                    "monitor": {
                      "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                      "name": "Monitor Name",
                      "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "monitor": {
                    "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                    "name": "Monitor Name",
                    "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                  }
                },
                "properties": {
                  "monitor": {
                    "example": {
                      "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                      "name": "Monitor Name",
                      "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "uid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "uid"
                    ],
                    "title": "Monitor3",
                    "type": "object"
                  }
                },
                "required": [
                  "monitor"
                ],
                "title": "CreateMonitorinaWorkspace",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_2f7d8538-bb58-455b-83a5-d317a75f39f6",
              "name": "400",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "details": {
                        "param": "schedule.timezone"
                      },
                      "message": "The request had invalid parameters",
                      "name": "invalidParamsError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "details": {
                      "param": "type"
                    },
                    "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                    "name": "invalidParamsError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "details": {
                        "param": "schedule.timezone"
                      },
                      "message": "The request had invalid parameters",
                      "name": "invalidParamsError"
                    },
                    "properties": {
                      "details": {
                        "example": {
                          "param": "schedule.timezone"
                        },
                        "properties": {
                          "param": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "param"
                        ],
                        "title": "Details3",
                        "type": "object"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message",
                      "details"
                    ],
                    "title": "Error11",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Error:InvalidParams",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_0437f5ee-c1f5-463d-a5dc-1d13d0b3eba7",
              "name": "CreateMonitor",
              "format": "JSON",
              "body": "{\n  \"monitor\": {\n    \"name\": \"This is a Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * *\",\n      \"timezone\": \"Asia/Kolkata\"\n    },\n    \"collection\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"environment\": \"5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
              "examples": {},
              "schema": {
                "example": {
                  "monitor": {
                    "collection": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                    "environment": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                    "name": "This is a Monitor Name",
                    "schedule": {
                      "cron": "0 0 * * *",
                      "timezone": "Asia/Kolkata"
                    }
                  }
                },
                "properties": {
                  "monitor": {
                    "example": {
                      "collection": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                      "environment": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                      "name": "This is a Monitor Name",
                      "schedule": {
                        "cron": "0 0 * * *",
                        "timezone": "Asia/Kolkata"
                      }
                    },
                    "properties": {
                      "collection": {
                        "type": "string"
                      },
                      "environment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schedule": {
                        "example": {
                          "cron": "0 0 * * *",
                          "timezone": "Asia/Kolkata"
                        },
                        "properties": {
                          "cron": {
                            "type": "string"
                          },
                          "timezone": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "cron",
                          "timezone"
                        ],
                        "title": "Schedule1",
                        "type": "object"
                      }
                    },
                    "required": [
                      "name",
                      "schedule",
                      "collection",
                      "environment"
                    ],
                    "title": "Monitor2",
                    "type": "object"
                  }
                },
                "required": [
                  "monitor"
                ],
                "title": "CreateMonitorRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.153Z",
          "group": "apigroup_39fda286-cc72-44ff-bd11-107c5fbf330c",
          "method": "POST",
          "name": "CreateSchema",
          "route": "/apis/{apiId}/versions/{apiVersionId}/schemas",
          "description": "This call creates a new schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Schema",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535652,
                "updatedAt": 1586215470611,
                "id": "headerparameter_e15b796c-e2da-4c8b-9394-30027ef86692",
                "name": "x-api-key",
                "endpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535449,
                "id": "routeparameter_bdbbf1aa-fbdd-44c9-8fd1-b01f7da7cd40",
                "name": "apiId",
                "endpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535506,
                "id": "routeparameter_9957ae8e-450d-4757-8dd3-f8010373d827",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_171e1d54-c05a-435d-aefd-97c3bce74b8d",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
              "examples": {
                "response": {
                  "value": {
                    "schema": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "schema": {
                    "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                    "language": "yaml",
                    "type": "openapi3",
                    "updateBy": "5665",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "schema": {
                    "example": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "apiVersion": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updateBy": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "language",
                      "apiVersion",
                      "type",
                      "createdBy",
                      "updateBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Schema3",
                    "type": "object"
                  }
                },
                "required": [
                  "schema"
                ],
                "title": "Createschema",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_1a02cb4c-4484-48e0-acc1-80c0214bf9b1",
              "name": "CreateSchema",
              "format": "JSON",
              "body": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"{}\",\n    \"type\": \"openapi3\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
              "examples": {},
              "schema": {
                "example": {
                  "schema": {
                    "language": "yaml",
                    "schema": "{}",
                    "type": "openapi3"
                  }
                },
                "properties": {
                  "schema": {
                    "example": {
                      "language": "yaml",
                      "schema": "{}",
                      "type": "openapi3"
                    },
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "schema": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "language",
                      "schema",
                      "type"
                    ],
                    "title": "Schema2",
                    "type": "object"
                  }
                },
                "required": [
                  "schema"
                ],
                "title": "CreateSchemaRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.166Z",
          "group": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "method": "POST",
          "name": "CreateWorkspace",
          "route": "/workspaces",
          "description": "This endpoint allows you to create a workspace and populate it with entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful creation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Create Workspace",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535624,
                "updatedAt": 1586215483615,
                "id": "headerparameter_008d73c2-1298-4401-9ab5-8e9bc6ca8651",
                "name": "x-api-key",
                "endpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_3e8e4542-d05e-4175-b4d9-968a845155c6",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
              "examples": {
                "response": {
                  "value": {
                    "workspace": {
                      "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                      "name": "New Workspace"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "workspace": {
                    "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                    "name": "New Workspace"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                      "name": "New Workspace"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ],
                    "title": "Workspace3",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "SuccessfulResponse7",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_eac403a2-9859-4651-bf90-c15ab3840fae",
              "name": "400",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "Instance not found in the database.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "message": "The specified workspace does not exist.",
                    "name": "instanceNotFoundError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    },
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message"
                    ],
                    "title": "Error",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Specifiedworkspace/entitiesdonotexist",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_290aacd6-08af-49ea-923c-df62af14c970",
              "name": "CreateWorkspace",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"name\": \"New Workspace\",\n    \"type\": \"personal\",\n    \"description\": \"Some description\",\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
              "examples": {},
              "schema": {
                "example": {
                  "workspace": {
                    "collections": [
                      {
                        "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                        "name": "Straw hats",
                        "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                      }
                    ],
                    "description": "Some description",
                    "environments": [
                      {
                        "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                        "name": "env",
                        "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                      }
                    ],
                    "mocks": [
                      {
                        "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                      }
                    ],
                    "monitors": [
                      {
                        "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                      }
                    ],
                    "name": "New Workspace",
                    "type": "personal"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "collections": [
                        {
                          "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                          "name": "Straw hats",
                          "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                        }
                      ],
                      "description": "Some description",
                      "environments": [
                        {
                          "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                          "name": "env",
                          "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                        }
                      ],
                      "mocks": [
                        {
                          "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                        }
                      ],
                      "monitors": [
                        {
                          "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                        }
                      ],
                      "name": "New Workspace",
                      "type": "personal"
                    },
                    "properties": {
                      "collections": {
                        "items": {
                          "example": {
                            "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                            "name": "Sample Collection",
                            "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Collection3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "environments": {
                        "items": {
                          "example": {
                            "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                            "name": "Sample Environment Name (required)",
                            "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Environment3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "mocks": {
                        "items": {
                          "example": {
                            "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "title": "Mock5",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "monitors": {
                        "items": {
                          "example": {
                            "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "title": "Monitor7",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "description",
                      "collections",
                      "environments",
                      "mocks",
                      "monitors"
                    ],
                    "title": "Workspace2",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "CreateWorkspaceRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_c17f86c7-1eb9-45c5-8264-ad23e01daa8b",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.194Z",
          "group": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "method": "GET",
          "name": "GetallAPIs",
          "route": "/apis",
          "description": "This call fetches all the APIs present in the specified workspace\n\nResponse contains an array named `apis` which would contain all the details of APIs present in the workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Get all APIs",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535497,
                "updatedAt": 1586215550165,
                "id": "headerparameter_b02c5b92-c9d4-42ae-a036-4a166785ffe0",
                "name": "x-api-key",
                "endpoint": "apiendpoint_c17f86c7-1eb9-45c5-8264-ad23e01daa8b",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535587,
                "id": "routeparameter_45acebcd-fc07-4689-8233-83934bdf99e1",
                "name": "workspace",
                "endpoint": "apiendpoint_c17f86c7-1eb9-45c5-8264-ad23e01daa8b",
                "querystring": true,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "description": "Workspace to be queried for fetching list of APIs",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_e71eb4a9-0e69-4922-86eb-96745b89a7ee",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"apis\": [\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n      \"name\": \"Sync API\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n      \"name\": \"Sync API\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edhdh\",\n      \"name\": \"Sync API 2\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_c17f86c7-1eb9-45c5-8264-ad23e01daa8b",
              "examples": {
                "response": {
                  "value": {
                    "apis": [
                      {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is a description.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      },
                      {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is a description.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      },
                      {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is a description.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edhdh",
                        "name": "Sync API 2",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "example": {
                  "apis": [
                    {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is a description.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is a description.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is a description.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edhdh",
                      "name": "Sync API 2",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  ]
                },
                "properties": {
                  "apis": {
                    "items": {
                      "example": {
                        "createdAt": "2019-02-12 19:34:49",
                        "createdBy": "5665",
                        "description": "This is supposed to handle markdown *descriptions*.",
                        "id": "387c2863-6ee3-4a56-8210-225f774edade",
                        "name": "Sync API",
                        "summary": "This is a summary",
                        "updatedAt": "2019-02-12 19:34:49"
                      },
                      "properties": {
                        "createdAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "summary",
                        "description",
                        "createdBy",
                        "createdAt",
                        "updatedAt"
                      ],
                      "title": "Api1",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "apis"
                ],
                "title": "GetallAPIs",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.128Z",
          "group": "apigroup_7f93efca-ef87-4a1a-ab77-f16d00cfe084",
          "method": "POST",
          "name": "Importexporteddata",
          "route": "/import/exported",
          "description": "This endpoint allows you to import your exported Postman data.\nFor more information about how you can export your data, refer <a href=\"https://go.postman.co/me/export\">Export your Postman data.</a>\n\nOn successful imports, the response will be an array with Each element contaning `id`, `name` and `uid` of entities created.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header.",
          "summary": "Import exported data",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535405,
                "updatedAt": 1586215601950,
                "id": "parameter_9b910157-6609-4383-b1b2-6b4e06ebf009",
                "name": "input",
                "endpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "description": "File containing the exported collections or environments",
                "status": "ACTIVE",
                "type": "parameter"
              },
              {
                "createdAt": 1586214535400,
                "updatedAt": 1586215601951,
                "id": "parameter_c1250c32-b6f2-40db-9df7-f6a38d328491",
                "name": "type",
                "endpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "type": "parameter"
              },
              {
                "createdAt": 1586214535514,
                "updatedAt": 1586215601950,
                "id": "headerparameter_ad02bb4e-0b78-45c1-8590-55c3401d51b1",
                "name": "x-api-key",
                "endpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_cc4d975d-66aa-41a5-a361-b4b53e667362",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"collections\": [\n    {\n      \"id\": \"e956ff02-7597-4f8d-a5e7-1c18208c9e56\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56\"\n    }\n  ]\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
              "examples": {
                "response": {
                  "value": {
                    "collections": [
                      {
                        "id": "e956ff02-7597-4f8d-a5e7-1c18208c9e56",
                        "name": "Swagger Petstore",
                        "uid": "2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "example": {
                  "collections": [
                    {
                      "id": "e956ff02-7597-4f8d-a5e7-1c18208c9e56",
                      "name": "Swagger Petstore",
                      "uid": "2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56"
                    }
                  ]
                },
                "properties": {
                  "collections": {
                    "items": {
                      "example": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Collection3",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "collections"
                ],
                "title": "Success:ImporttoaspecificworkspacewithworkspaceIDpassedintheheaders",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_8b5a1e4d-194c-45e5-91d8-5dbe8ee632d6",
              "name": "400",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "details": {
                        "param": "type"
                      },
                      "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                      "name": "invalidParamsError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "details": {
                      "param": "type"
                    },
                    "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                    "name": "invalidParamsError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "details": {
                        "param": "schedule.timezone"
                      },
                      "message": "The request had invalid parameters",
                      "name": "invalidParamsError"
                    },
                    "properties": {
                      "details": {
                        "example": {
                          "param": "schedule.timezone"
                        },
                        "properties": {
                          "param": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "param"
                        ],
                        "title": "Details3",
                        "type": "object"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message",
                      "details"
                    ],
                    "title": "Error11",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Error:InvalidParams",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "fake-55eaf882-9039-44ef-bfea-dcdf12b12082",
              "name": "",
              "format": "FORM_DATA",
              "body": null,
              "description": "",
              "type": null,
              "apiendpoint": null,
              "examples": {},
              "schema": {},
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.197Z",
          "group": "apigroup_7f93efca-ef87-4a1a-ab77-f16d00cfe084",
          "method": "POST",
          "name": "ImportexternalAPIspecification",
          "route": "/import/{importType}",
          "description": "This endpoint allows you to import external API specifications into Postman.\n\nCurrently, this endpoint only supports the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md\">OpenAPI</a> specification, for which the `importType` will be `openapi`.\n\nOn a successful import, the response will be an array with each element contaning `id`, `name` and `uid` of entities created.\n\nSupported `type`s:\n\n- string\n- json\n- file\n\nThe `input` parameter should be defined based on the `type`.\n\n> To import a file, request body must be form-data with `type` param set to `file`.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header.",
          "summary": "Import external API specification",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535522,
                "updatedAt": 1586215617221,
                "id": "headerparameter_27d18cd1-8c36-4a9b-9ec4-7a290ea72843",
                "name": "x-api-key",
                "endpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535403,
                "id": "routeparameter_4e92a3d3-81a3-4605-9a1f-dd1f808ccbec",
                "name": "importType",
                "endpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_f7356253-2717-4768-bab1-bb436c31a8a2",
              "name": "400",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "details": {
                        "param": "type"
                      },
                      "message": "The request body is missing a value for the type parameter. Check your request and try again.",
                      "name": "paramMissingError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "details": {
                      "param": "type"
                    },
                    "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                    "name": "invalidParamsError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "details": {
                        "param": "schedule.timezone"
                      },
                      "message": "The request had invalid parameters",
                      "name": "invalidParamsError"
                    },
                    "properties": {
                      "details": {
                        "example": {
                          "param": "schedule.timezone"
                        },
                        "properties": {
                          "param": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "param"
                        ],
                        "title": "Details3",
                        "type": "object"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message",
                      "details"
                    ],
                    "title": "Error11",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Error:InvalidParams",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_9d567c10-de69-4727-ab0c-eeb19fa743da",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
              "examples": {
                "response": {
                  "value": {
                    "collections": [
                      {
                        "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                        "name": "Swagger Petstore",
                        "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "example": {
                  "collections": [
                    {
                      "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                      "name": "Swagger Petstore",
                      "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                    }
                  ]
                },
                "properties": {
                  "collections": {
                    "items": {
                      "example": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Collection3",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "collections"
                ],
                "title": "Success:ImporttoaspecificworkspacewithworkspaceIDpassedasaqueryparameter",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_de0bebdc-53b6-4222-a50b-aa35d5e03747",
              "name": "ImportexternalAPIspecification",
              "format": "JSON",
              "body": "{\n  \"type\": \"json\",\n  \"input\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"version\": \"1.0.0\",\n      \"title\": \"Swagger Petstore\",\n      \"license\": {\n        \"name\": \"MIT\"\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://petstore.swagger.io/v1\"\n      }\n    ],\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"summary\": \"List all pets\",\n          \"operationId\": \"listPets\",\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"in\": \"query\",\n              \"description\": \"limit\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"title\": \"Error\",\n                    \"example\": {\n                      \"name\": \"malformedRequestError\",\n                      \"message\": \"Missing required property: name at info\"\n                    },\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\",\n                      \"message\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"components\": {\n      \"schemas\": {\n        \"Error\": {\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"message\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
              "examples": {},
              "schema": {
                "example": {
                  "input": {
                    "components": {
                      "schemas": {
                        "Error": {
                          "properties": {
                            "code": {
                              "format": "int32",
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ]
                        }
                      }
                    },
                    "info": {
                      "license": {
                        "name": "MIT"
                      },
                      "title": "Swagger Petstore",
                      "version": "1.0.0"
                    },
                    "openapi": "3.0.0",
                    "paths": {
                      "/pets": {
                        "get": {
                          "operationId": "listPets",
                          "parameters": [
                            {
                              "description": "limit",
                              "in": "query",
                              "name": "limit",
                              "required": false,
                              "schema": {
                                "format": "int32",
                                "type": "integer"
                              }
                            }
                          ],
                          "responses": {
                            "default": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "example": {
                                      "message": "Missing required property: name at info",
                                      "name": "malformedRequestError"
                                    },
                                    "properties": {
                                      "message": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "message"
                                    ],
                                    "title": "Error",
                                    "type": "object"
                                  }
                                }
                              },
                              "description": "unexpected error"
                            }
                          },
                          "summary": "List all pets"
                        }
                      }
                    },
                    "servers": [
                      {
                        "url": "http://petstore.swagger.io/v1"
                      }
                    ]
                  },
                  "type": "json"
                },
                "properties": {
                  "input": {
                    "example": {
                      "components": {
                        "schemas": {
                          "Error": {
                            "properties": {
                              "code": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ]
                          }
                        }
                      },
                      "info": {
                        "license": {
                          "name": "MIT"
                        },
                        "title": "Swagger Petstore",
                        "version": "1.0.0"
                      },
                      "openapi": "3.0.0",
                      "paths": {
                        "/pets": {
                          "get": {
                            "operationId": "listPets",
                            "parameters": [
                              {
                                "description": "limit",
                                "in": "query",
                                "name": "limit",
                                "required": false,
                                "schema": {
                                  "format": "int32",
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "default": {
                                "content": {
                                  "application/json": {}
                                },
                                "description": "unexpected error"
                              }
                            },
                            "summary": "List all pets"
                          }
                        }
                      },
                      "servers": [
                        {
                          "url": "http://petstore.swagger.io/v1"
                        }
                      ]
                    },
                    "properties": {
                      "components": {
                        "example": {
                          "schemas": {
                            "Error": {
                              "properties": {
                                "code": {
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            }
                          }
                        },
                        "properties": {
                          "schemas": {
                            "example": {
                              "Error": {
                                "properties": {
                                  "code": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "message"
                                ]
                              }
                            },
                            "properties": {
                              "Error": {
                                "example": {
                                  "properties": {
                                    "code": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "message"
                                  ]
                                },
                                "properties": {
                                  "properties": {
                                    "example": {
                                      "code": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "type": "string"
                                      }
                                    },
                                    "properties": {
                                      "code": {
                                        "example": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "properties": {
                                          "format": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "format"
                                        ],
                                        "title": "Code",
                                        "type": "object"
                                      },
                                      "message": {
                                        "example": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Message",
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "code",
                                      "message"
                                    ],
                                    "title": "Properties",
                                    "type": "object"
                                  },
                                  "required": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "required",
                                  "properties"
                                ],
                                "title": "Error21",
                                "type": "object"
                              }
                            },
                            "required": [
                              "Error"
                            ],
                            "title": "Schemas",
                            "type": "object"
                          }
                        },
                        "required": [
                          "schemas"
                        ],
                        "title": "Components",
                        "type": "object"
                      },
                      "info": {
                        "example": {
                          "license": {
                            "name": "MIT"
                          },
                          "title": "Swagger Petstore",
                          "version": "1.0.0"
                        },
                        "properties": {
                          "license": {
                            "example": {
                              "name": "MIT"
                            },
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "title": "License",
                            "type": "object"
                          },
                          "title": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "version",
                          "title",
                          "license"
                        ],
                        "title": "Info4",
                        "type": "object"
                      },
                      "openapi": {
                        "type": "string"
                      },
                      "paths": {
                        "example": {
                          "/pets": {
                            "get": {
                              "operationId": "listPets",
                              "parameters": [
                                {
                                  "description": "limit",
                                  "in": "query",
                                  "name": "limit",
                                  "required": false,
                                  "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              ],
                              "responses": {
                                "default": {
                                  "content": {
                                    "application/json": {}
                                  },
                                  "description": "unexpected error"
                                }
                              },
                              "summary": "List all pets"
                            }
                          }
                        },
                        "properties": {
                          "/pets": {
                            "example": {
                              "get": {
                                "operationId": "listPets",
                                "parameters": [
                                  {
                                    "description": "limit",
                                    "in": "query",
                                    "name": "limit",
                                    "required": false,
                                    "schema": {
                                      "format": "int32",
                                      "type": "integer"
                                    }
                                  }
                                ],
                                "responses": {
                                  "default": {
                                    "content": {
                                      "application/json": {}
                                    },
                                    "description": "unexpected error"
                                  }
                                },
                                "summary": "List all pets"
                              }
                            },
                            "properties": {
                              "get": {
                                "example": {
                                  "operationId": "listPets",
                                  "parameters": [
                                    {
                                      "description": "limit",
                                      "in": "query",
                                      "name": "limit",
                                      "required": false,
                                      "schema": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    }
                                  ],
                                  "responses": {
                                    "default": {
                                      "content": {
                                        "application/json": {}
                                      },
                                      "description": "unexpected error"
                                    }
                                  },
                                  "summary": "List all pets"
                                },
                                "properties": {
                                  "operationId": {
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "items": {
                                      "example": {
                                        "description": "limit",
                                        "in": "query",
                                        "name": "limit",
                                        "required": false,
                                        "schema": {
                                          "format": "int32",
                                          "type": "integer"
                                        }
                                      },
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "in": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "schema": {
                                          "example": {
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "properties": {
                                            "format": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "format"
                                          ],
                                          "title": "Schema",
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "in",
                                        "description",
                                        "required",
                                        "schema"
                                      ],
                                      "title": "Parameter",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "responses": {
                                    "example": {
                                      "default": {
                                        "content": {
                                          "application/json": {}
                                        },
                                        "description": "unexpected error"
                                      }
                                    },
                                    "properties": {
                                      "default": {
                                        "example": {
                                          "content": {
                                            "application/json": {}
                                          },
                                          "description": "unexpected error"
                                        },
                                        "properties": {
                                          "content": {
                                            "example": {
                                              "application/json": {}
                                            },
                                            "properties": {
                                              "application/json": {
                                                "example": {},
                                                "properties": {
                                                  "schema": {
                                                    "properties": {
                                                      "$ref": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "$ref"
                                                    ],
                                                    "title": "Schema1",
                                                    "type": "object"
                                                  }
                                                },
                                                "required": [
                                                  "schema"
                                                ],
                                                "title": "ApplicationJson",
                                                "type": "object"
                                              }
                                            },
                                            "required": [
                                              "application/json"
                                            ],
                                            "title": "Content",
                                            "type": "object"
                                          },
                                          "description": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "description",
                                          "content"
                                        ],
                                        "title": "Default",
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "default"
                                    ],
                                    "title": "Responses",
                                    "type": "object"
                                  },
                                  "summary": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "summary",
                                  "operationId",
                                  "parameters",
                                  "responses"
                                ],
                                "title": "Get",
                                "type": "object"
                              }
                            },
                            "required": [
                              "get"
                            ],
                            "title": "Pets",
                            "type": "object"
                          }
                        },
                        "required": [
                          "/pets"
                        ],
                        "title": "Paths",
                        "type": "object"
                      },
                      "servers": {
                        "items": {
                          "example": {
                            "url": "http://petstore.swagger.io/v1"
                          },
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "title": "Server",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "openapi",
                      "info",
                      "servers",
                      "paths",
                      "components"
                    ],
                    "title": "Input",
                    "type": "object"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "input"
                ],
                "title": "ImportexternalAPIspecificationRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.085Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "POST",
          "name": "MergeaFork",
          "route": "/collections/merge",
          "description": "This endpoint allows you to merge a forked collection back to its destination collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and `uid`.\n\nYou need to specify the fork UID (as `source`) and destination collection UID (as `destination`) in the request body.\n\nOptionally, you can also specify the merge strategy as either `deleteSource` or `updateSourceWithDestination`. Following is an explanation of the merge strategies\n\n| Merge Strategy | Behaviour |\n| --- | --- |\n| deleteSource | Forked collection is deleted after merging |\n| updateSourceWithDestination | Forked collection is up to date with changes in destination collection |\n\nIf the collections cannot be merged (due to conflicts), appropriate error messages will be returned.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Merge a Fork",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535601,
                "updatedAt": 1586215638213,
                "id": "headerparameter_0588b630-5c77-4ae1-aaab-0ae380e8b7fc",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_bd442cec-065f-4a36-946a-4599caab30fd",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_3e45e6a2-ace8-4153-adab-fedc14785eb3",
              "name": "MergeaFork",
              "format": "JSON",
              "body": "{\n  \"strategy\": \"deleteSource\",\n  \"source\": \"{{source_collection_uid}}\",\n  \"destination\": \"{{destination_collection_uid}}\"\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
              "examples": {},
              "schema": {
                "example": {
                  "destination": "{{destination_collection_uid}}",
                  "source": "{{source_collection_uid}}",
                  "strategy": "deleteSource"
                },
                "properties": {
                  "destination": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "strategy": {
                    "type": "string"
                  }
                },
                "required": [
                  "strategy",
                  "source",
                  "destination"
                ],
                "title": "MergeaForkRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.195Z",
          "group": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "method": "PUT",
          "name": "UpdateanAPI",
          "route": "/apis/{apiId}",
          "description": "This call updates an existing API .  \n\nRequest body should contain an `api` object which should have the fields to be updated. Only `name`, `summary` and `description` fields can be edited for an API.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Update an API",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535651,
                "updatedAt": 1586215698218,
                "id": "headerparameter_37fc7a69-39d7-4d5e-a8eb-bbad419e3163",
                "name": "x-api-key",
                "endpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535456,
                "id": "routeparameter_67a2711f-7ede-4b09-b78b-bd2ba485e21e",
                "name": "apiId",
                "endpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_bf2d6dae-5eb8-4d4f-85a5-540a7c397864",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is a description.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
              "examples": {
                "response": {
                  "value": {
                    "api": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is a description.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "api": {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is a description.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "description": "This is supposed to handle markdown *descriptions*.",
                      "id": "387c2863-6ee3-4a56-8210-225f774edade",
                      "name": "Sync API",
                      "summary": "This is a summary",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "summary",
                      "description",
                      "createdBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Api1",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "UpdateanAPI",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_86be969d-88d2-4c56-bc66-a42b0b4530be",
              "name": "UpdateanAPI",
              "format": "JSON",
              "body": "{\n  \"api\": {\n    \"name\": \"New name\",\n    \"description\": \"This is an updated Description\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
              "examples": {},
              "schema": {
                "example": {
                  "api": {
                    "description": "This is an updated Description",
                    "name": "New name"
                  }
                },
                "properties": {
                  "api": {
                    "example": {
                      "description": "This is an updated Description",
                      "name": "New name"
                    },
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ],
                    "title": "Api2",
                    "type": "object"
                  }
                },
                "required": [
                  "api"
                ],
                "title": "UpdateanAPIRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.214Z",
          "group": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "method": "PUT",
          "name": "UpdateanAPIVersion",
          "route": "/apis/{apiId}/versions/{apiVersionId}",
          "description": "This call updates an existing API Version.  \n\nRequest body should contain a `version` object with the fields which need to be updated. Only field which can be updated is `name`.\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api` etc.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Update an API Version",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535477,
                "updatedAt": 1586215708944,
                "id": "headerparameter_0280cc13-1edf-4ce4-bc46-6e367c3902ee",
                "name": "x-api-key",
                "endpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535399,
                "id": "routeparameter_acfd2663-82f0-491c-ae61-89375bde4dfb",
                "name": "apiId",
                "endpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535515,
                "id": "routeparameter_6df91eaa-5ffb-49ef-ad6d-bcf880f20be8",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_86b3150f-004d-4306-a879-8821c47e0bd0",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"createdAt\": \"2019-07-26T11:24:15Z\",\n    \"updatedAt\": \"2019-08-09T09:27:36Z\",\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdBy\": \"12\",\n    \"updatedBy\": \"5665\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
              "examples": {
                "response": {
                  "value": {
                    "version": {
                      "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                      "createdAt": "2019-07-26T11:24:15Z",
                      "createdBy": "12",
                      "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                      "name": "2.0",
                      "updatedAt": "2019-08-09T09:27:36Z",
                      "updatedBy": "5665"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "version": {
                    "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                    "createdAt": "2019-07-26T11:24:15Z",
                    "createdBy": "12",
                    "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                    "name": "2.0",
                    "updatedAt": "2019-08-09T09:27:36Z",
                    "updatedBy": "5665"
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                      "createdAt": "2019-07-26T11:24:15Z",
                      "createdBy": "12",
                      "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                      "name": "2.0",
                      "updatedAt": "2019-08-09T09:27:36Z",
                      "updatedBy": "5665"
                    },
                    "properties": {
                      "api": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "updatedBy": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "createdAt",
                      "updatedAt",
                      "api",
                      "createdBy",
                      "updatedBy"
                    ],
                    "title": "Version3",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "UpdateanAPIversion",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_18564999-8543-4987-806e-610016aff0c9",
              "name": "UpdateanAPIVersion",
              "format": "JSON",
              "body": "{\n  \"version\": {\n    \"name\": \"2.0\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
              "examples": {},
              "schema": {
                "example": {
                  "version": {
                    "name": "2.0"
                  }
                },
                "properties": {
                  "version": {
                    "example": {
                      "name": "2.0"
                    },
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "title": "Version2",
                    "type": "object"
                  }
                },
                "required": [
                  "version"
                ],
                "title": "UpdateanAPIVersionRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.078Z",
          "group": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "method": "PUT",
          "name": "UpdateCollection",
          "route": "/collections/{collection_uid}",
          "description": "This endpoint allows you to update an existing collection using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful updation of the collection, the response returns the collection `name`, `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\nNote: Please be careful when trying to update the collection, as the existing collection will be replaced by the request body.",
          "summary": "Update Collection",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535484,
                "updatedAt": 1586215726930,
                "id": "headerparameter_0a233865-2f1f-4206-9b80-2bca86b77de8",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535414,
                "id": "routeparameter_2ca20c4a-4392-4d61-9149-88962bac9b70",
                "name": "collection_uid",
                "endpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_9be8260f-274d-4330-b7f5-029d11e27e14",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_45a3bbf2-9956-4ff4-83f1-9c85ad3f4c25",
              "name": "400",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "The collection ID in the path does not match the collection ID in the request body.",
                      "name": "collectionMismatchError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_a6af29fb-a3ef-4976-921c-d695eefbdafe",
              "name": "404",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "details": {
                        "id": "1d3daef4-2037-4584-ab86-bafd8c8f8a54",
                        "item": "collection"
                      },
                      "message": "The specified item does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_6d1fcb3a-91f8-4e2a-aade-b4bd8132c9f3",
              "name": "403",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Forbidden",
              "type": "apipayload",
              "statusCode": 403,
              "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "You do not have enough permissions to perform this action.",
                      "name": "forbiddenError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_07c21ad1-d501-472c-982d-54684c1623a5",
              "name": "UpdateCollection",
              "format": "JSON",
              "body": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
              "examples": {},
              "schema": {
                "example": {
                  "collection": {
                    "info": {
                      "_postman_id": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                      "description": "This is just a sample collection.",
                      "name": "Sample Collection {{$randomInt}}",
                      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                    },
                    "item": [
                      {
                        "item": [
                          {
                            "name": "Sample POST Request",
                            "request": {
                              "body": {
                                "mode": "raw",
                                "raw": "{\"data\": \"123\"}"
                              },
                              "description": "This is a sample POST Request",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "method": "POST",
                              "url": "https://postman-echo.com/post"
                            }
                          }
                        ],
                        "name": "This is a folder"
                      },
                      {
                        "name": "Sample GET Request",
                        "request": {
                          "description": "This is a sample GET Request",
                          "method": "GET",
                          "url": "https://postman-echo/get"
                        }
                      }
                    ]
                  }
                },
                "properties": {
                  "collection": {
                    "example": {
                      "info": {
                        "_postman_id": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                        "description": "This is just a sample collection.",
                        "name": "Sample Collection {{$randomInt}}",
                        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                      },
                      "item": [
                        {
                          "item": [
                            {
                              "name": "Sample POST Request",
                              "request": {
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\"data\": \"123\"}"
                                },
                                "description": "This is a sample POST Request",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "url": "https://postman-echo.com/post"
                              }
                            }
                          ],
                          "name": "This is a folder"
                        },
                        {
                          "name": "Sample GET Request",
                          "request": {
                            "description": "This is a sample GET Request",
                            "method": "GET",
                            "url": "https://postman-echo/get"
                          }
                        }
                      ]
                    },
                    "properties": {
                      "info": {
                        "example": {
                          "_postman_id": "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                          "description": "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                          "name": "Sample Collection",
                          "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
                        },
                        "properties": {
                          "_postman_id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "_postman_id",
                          "description",
                          "schema"
                        ],
                        "title": "Info",
                        "type": "object"
                      },
                      "item": {
                        "items": {
                          "example": {
                            "item": [
                              {
                                "name": "Sample POST Request",
                                "request": {
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\"data\": \"123\"}"
                                  },
                                  "description": "This is a sample POST Request",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "method": "POST",
                                  "url": "https://postman-echo.com/post"
                                }
                              }
                            ],
                            "name": "This is a folder"
                          },
                          "properties": {
                            "item": {
                              "items": {
                                "example": {
                                  "name": "Sample POST Request",
                                  "request": {
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\"data\": \"123\"}"
                                    },
                                    "description": "This is a sample POST Request",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      }
                                    ],
                                    "method": "POST",
                                    "url": "https://postman-echo.com/post"
                                  }
                                },
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "request": {
                                    "example": {
                                      "body": {
                                        "mode": "raw",
                                        "raw": "{\"data\": \"123\"}"
                                      },
                                      "description": "This is a sample POST Request",
                                      "header": [
                                        {
                                          "key": "Content-Type",
                                          "value": "application/json"
                                        }
                                      ],
                                      "method": "POST",
                                      "url": "https://postman-echo.com/post"
                                    },
                                    "properties": {
                                      "body": {
                                        "example": {
                                          "mode": "raw",
                                          "raw": "{\"data\": \"123\"}"
                                        },
                                        "properties": {
                                          "mode": {
                                            "type": "string"
                                          },
                                          "raw": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "mode",
                                          "raw"
                                        ],
                                        "title": "Body1",
                                        "type": "object"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "header": {
                                        "items": {
                                          "example": {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                          },
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "value"
                                          ],
                                          "title": "Header1",
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "method": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "method",
                                      "header",
                                      "body",
                                      "description"
                                    ],
                                    "title": "Request1",
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "name",
                                  "request"
                                ],
                                "title": "Item2",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "type": "string"
                            },
                            "request": {
                              "example": {
                                "description": "This is a sample GET Request",
                                "method": "GET",
                                "url": "https://postman-echo/get"
                              },
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "method",
                                "description"
                              ],
                              "title": "Request2",
                              "type": "object"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Item1",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "info",
                      "item"
                    ],
                    "title": "Collection4",
                    "type": "object"
                  }
                },
                "required": [
                  "collection"
                ],
                "title": "UpdateCollectionRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.242Z",
          "group": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "method": "PUT",
          "name": "UpdateEnvironment",
          "route": "/environments/{environment_uid}",
          "description": "This endpoint replaces an existing environment.\n\nA sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"environment\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\"minLength\": 1\n\t\t\t\t},\n\t\t\t\t\"values\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"maxItems\": 100,\n\t\t\t\t\t\"additionalItems\": false,\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"key\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"maxLength\": 254,\n\t\t\t\t\t\t\t\t\"minLength\": 1\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"type\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"enabled\": {\n\t\t\t\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"key\",\n\t\t\t\t\t\t\t\"value\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"environment\"\n\t]\n}\n```\n\nOn successful updation of the environment, the API returns the environment name and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Update Environment",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535536,
                "updatedAt": 1586215736014,
                "id": "headerparameter_874fab11-db01-4e0d-a165-d2b324a74d9e",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535331,
                "id": "routeparameter_8b1b6809-993b-42fd-860b-24fe3b7725a6",
                "name": "environment_uid",
                "endpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_52d11401-88c6-4e64-97e9-b60f4732289e",
              "name": "400",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "Bad Request",
              "type": "apipayload",
              "statusCode": 400,
              "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "Invalid type: null (expected object) at environment.values.0",
                      "name": "malformedRequestError"
                    }
                  }
                }
              },
              "schema": {},
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_150c2fc4-ff1f-44be-9721-8bea6b157196",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_ab9cbdd3-87b8-446c-a44b-012b9b7dbf1c",
              "name": "UpdateEnvironment",
              "format": "JSON",
              "body": "{\n  \"environment\": {\n    \"name\": \"New Name\",\n    \"values\": [\n      {\n        \"key\": \"name\",\n        \"value\": \"Bruce Wayne\"\n      },\n      {\n        \"key\": \"occupation\",\n        \"value\": \"Vigilante\"\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
              "examples": {},
              "schema": {
                "example": {
                  "environment": {
                    "name": "New Name",
                    "values": [
                      {
                        "key": "name",
                        "value": "Bruce Wayne"
                      },
                      {
                        "key": "occupation",
                        "value": "Vigilante"
                      }
                    ]
                  }
                },
                "properties": {
                  "environment": {
                    "example": {
                      "name": "Sample Environment Name (required)",
                      "values": [
                        {
                          "key": "variable_name_1",
                          "value": "The value of the variable"
                        },
                        {
                          "key": "variable_name_2",
                          "value": ""
                        }
                      ]
                    },
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "values": {
                        "items": {
                          "example": {
                            "key": "variable_name_1",
                            "value": "The value of the variable"
                          },
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "key",
                            "value"
                          ],
                          "title": "Value1",
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "name",
                      "values"
                    ],
                    "title": "Environment2",
                    "type": "object"
                  }
                },
                "required": [
                  "environment"
                ],
                "title": "UpdateEnvironmentRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.131Z",
          "group": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "method": "PUT",
          "name": "UpdateMonitor",
          "route": "/monitors/{monitor_uid}",
          "description": "This endpoint allows you to update a monitor using its `uid`. Only the monitor name and its schedule can be updated.\n\nSome example `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Update Monitor",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535548,
                "updatedAt": 1586215745530,
                "id": "headerparameter_ee0a7147-8550-4c01-be42-2f9fcf7a2251",
                "name": "X-Api-Key",
                "endpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535663,
                "id": "routeparameter_31739c8f-5744-4646-a069-95fac6721633",
                "name": "monitor_uid",
                "endpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_74db5231-928e-4a4a-b125-747a26f6fe63",
              "name": "200",
              "format": "JSON",
              "body": "{}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
              "examples": {},
              "schema": {},
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_1886f0a8-5a55-4c27-bd35-994c35f7b447",
              "name": "UpdateMonitor",
              "format": "JSON",
              "body": "{\n  \"monitor\": {\n    \"name\": \"Updated Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"*/5 * * * *\",\n      \"timezone\": \"America/Chicago\"\n    }\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
              "examples": {},
              "schema": {
                "example": {
                  "monitor": {
                    "name": "Updated Monitor Name",
                    "schedule": {
                      "cron": "*/5 * * * *",
                      "timezone": "America/Chicago"
                    }
                  }
                },
                "properties": {
                  "monitor": {
                    "example": {
                      "name": "Updated Monitor Name",
                      "schedule": {
                        "cron": "*/5 * * * *",
                        "timezone": "America/Chicago"
                      }
                    },
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "schedule": {
                        "example": {
                          "cron": "0 0 * * *",
                          "timezone": "Asia/Kolkata"
                        },
                        "properties": {
                          "cron": {
                            "type": "string"
                          },
                          "timezone": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "cron",
                          "timezone"
                        ],
                        "title": "Schedule1",
                        "type": "object"
                      }
                    },
                    "required": [
                      "name",
                      "schedule"
                    ],
                    "title": "Monitor4",
                    "type": "object"
                  }
                },
                "required": [
                  "monitor"
                ],
                "title": "UpdateMonitorRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.187Z",
          "group": "apigroup_39fda286-cc72-44ff-bd11-107c5fbf330c",
          "method": "PUT",
          "name": "UpdateSchema",
          "route": "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}",
          "description": "This call updates an existing schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
          "summary": "Update Schema",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535643,
                "updatedAt": 1586215755900,
                "id": "headerparameter_3639f2f4-d3d5-42d4-ac05-e7bb1da4f3af",
                "name": "x-api-key",
                "endpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535587,
                "id": "routeparameter_0f7cf9d2-07eb-43ae-a2f3-771ca04262ad",
                "name": "apiId",
                "endpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535641,
                "id": "routeparameter_4843d734-70f0-4901-b418-9f983dd3d19a",
                "name": "apiVersionId",
                "endpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              },
              {
                "createdAt": 1586214535662,
                "id": "routeparameter_88523d72-f51f-45bf-afaf-bb1403d332d7",
                "name": "schemaId",
                "endpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_f35bb61c-6d34-4951-930b-94744668f3a6",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
              "examples": {
                "response": {
                  "value": {
                    "schema": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "schema": {
                    "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                    "language": "yaml",
                    "type": "openapi3",
                    "updateBy": "5665",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                },
                "properties": {
                  "schema": {
                    "example": {
                      "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                      "createdAt": "2019-02-12 19:34:49",
                      "createdBy": "5665",
                      "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                      "language": "yaml",
                      "type": "openapi3",
                      "updateBy": "5665",
                      "updatedAt": "2019-02-12 19:34:49"
                    },
                    "properties": {
                      "apiVersion": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updateBy": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "language",
                      "apiVersion",
                      "type",
                      "createdBy",
                      "updateBy",
                      "createdAt",
                      "updatedAt"
                    ],
                    "title": "Schema3",
                    "type": "object"
                  }
                },
                "required": [
                  "schema"
                ],
                "title": "Updateschema",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_f09a350a-e4a9-4a41-ab2e-6718655a075d",
              "name": "UpdateSchema",
              "format": "JSON",
              "body": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"new schema\",\n    \"type\": \"openapi3\"\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
              "examples": {},
              "schema": {
                "example": {
                  "schema": {
                    "language": "yaml",
                    "schema": "new schema",
                    "type": "openapi3"
                  }
                },
                "properties": {
                  "schema": {
                    "example": {
                      "language": "yaml",
                      "schema": "{}",
                      "type": "openapi3"
                    },
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "schema": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "language",
                      "schema",
                      "type"
                    ],
                    "title": "Schema2",
                    "type": "object"
                  }
                },
                "required": [
                  "schema"
                ],
                "title": "UpdateSchemaRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        },
        {
          "id": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
          "index": null,
          "createdAt": "2020-04-06T23:08:55.379Z",
          "group": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "method": "PUT",
          "name": "UpdateWorkspace",
          "route": "/workspaces/{workspace_id}",
          "description": "This endpoint allows you to update a workspace and update it's association to entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful updation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\n**Note** : The endpoint expects you to send the desired state of the workspace in terms of the associated entities so be careful when trying to update these entities.\n\nFor eg. if your workspace has collections A and B, and in the update call, you send C's uid in the collections array, then A and B would be removed from the workspace and C would be added.",
          "summary": "Update Workspace",
          "isGraphQL": false,
          "endpointPath": null,
          "externalDocs": null,
          "graphQLSchema": null,
          "params": {
            "parameters": [
              {
                "createdAt": 1586214535584,
                "updatedAt": 1586215765730,
                "id": "headerparameter_5f5d8f16-e41e-4751-b408-f4dcdc854b68",
                "name": "x-api-key",
                "endpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "headerparameter"
              },
              {
                "createdAt": 1586214535540,
                "id": "routeparameter_43299542-8fb3-46ba-99c5-26df4ee2f550",
                "name": "workspace_id",
                "endpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
                "querystring": false,
                "paramType": "STRING",
                "condition": "REQUIRED",
                "status": "ACTIVE",
                "schema": {
                  "type": "string"
                },
                "type": "routeparameter"
              }
            ],
            "__typename": "EndpointParams"
          },
          "appliedOauth2Scopes": [],
          "responsePayloads": [
            {
              "id": "apipayload_c09c3d9c-7748-493a-b1cb-05431c3d2b53",
              "name": "404",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
              "headers": null,
              "description": "Not Found",
              "type": "apipayload",
              "statusCode": 404,
              "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "The specified workspace does not exist.",
                      "name": "instanceNotFoundError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "message": "The specified workspace does not exist.",
                    "name": "instanceNotFoundError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    },
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message"
                    ],
                    "title": "Error",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Specifiedworkspace/entitiesdonotexist",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_d59f7daa-fa36-45b4-b46d-83131719fe31",
              "name": "200",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
              "headers": null,
              "description": "",
              "type": "apipayload",
              "statusCode": 200,
              "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
              "examples": {
                "response": {
                  "value": {
                    "workspace": {
                      "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                      "name": "New Workspace"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "workspace": {
                    "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                    "name": "New Workspace"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                      "name": "New Workspace"
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ],
                    "title": "Workspace3",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "SuccessfulResponse7",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            },
            {
              "id": "apipayload_ca71fb2b-05e1-4c4b-8094-f6ee24ce7782",
              "name": "403",
              "format": "JSON",
              "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
              "headers": null,
              "description": "Forbidden",
              "type": "apipayload",
              "statusCode": 403,
              "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
              "examples": {
                "response": {
                  "value": {
                    "error": {
                      "message": "You do not have access to update this workspace.",
                      "name": "forbiddenError"
                    }
                  }
                }
              },
              "schema": {
                "example": {
                  "error": {
                    "message": "The specified workspace does not exist.",
                    "name": "instanceNotFoundError"
                  }
                },
                "properties": {
                  "error": {
                    "example": {
                      "message": "Missing required property: name at info",
                      "name": "malformedRequestError"
                    },
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "message"
                    ],
                    "title": "Error",
                    "type": "object"
                  }
                },
                "required": [
                  "error"
                ],
                "title": "Specifiedworkspace/entitiesdonotexist",
                "type": "object"
              },
              "__typename": "ResponsePayload"
            }
          ],
          "requestPayloads": [
            {
              "id": "apipayload_deab32ed-1936-4bb8-aefe-4f32c50e8370",
              "name": "UpdateWorkspace",
              "format": "JSON",
              "body": "{\n  \"workspace\": {\n    \"name\": \"New Workspace updated\",\n    \"description\": \"Some description\",\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ]\n  }\n}",
              "description": "",
              "type": "apipayload",
              "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
              "examples": {},
              "schema": {
                "example": {
                  "workspace": {
                    "collections": [
                      {
                        "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                        "name": "Straw hats",
                        "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                      }
                    ],
                    "description": "Some description",
                    "environments": [
                      {
                        "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                        "name": "env",
                        "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                      }
                    ],
                    "mocks": [
                      {
                        "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                      }
                    ],
                    "monitors": [
                      {
                        "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                      }
                    ],
                    "name": "New Workspace updated"
                  }
                },
                "properties": {
                  "workspace": {
                    "example": {
                      "collections": [
                        {
                          "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                          "name": "Straw hats",
                          "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                        }
                      ],
                      "description": "Some description",
                      "environments": [
                        {
                          "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                          "name": "env",
                          "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                        }
                      ],
                      "mocks": [
                        {
                          "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                        }
                      ],
                      "monitors": [
                        {
                          "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                        }
                      ],
                      "name": "New Workspace updated"
                    },
                    "properties": {
                      "collections": {
                        "items": {
                          "example": {
                            "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                            "name": "Sample Collection",
                            "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Collection3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "description": {
                        "type": "string"
                      },
                      "environments": {
                        "items": {
                          "example": {
                            "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                            "name": "Sample Environment Name (required)",
                            "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "uid": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "uid"
                          ],
                          "title": "Environment3",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "mocks": {
                        "items": {
                          "example": {
                            "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "title": "Mock5",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "monitors": {
                        "items": {
                          "example": {
                            "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                          },
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "title": "Monitor7",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "collections",
                      "environments",
                      "mocks",
                      "monitors"
                    ],
                    "title": "Workspace4",
                    "type": "object"
                  }
                },
                "required": [
                  "workspace"
                ],
                "title": "UpdateWorkspaceRequest",
                "type": "object"
              },
              "__typename": "RequestPayload"
            }
          ],
          "authentication": null,
          "__typename": "Endpoint"
        }
      ],
      "authentication": null,
      "payloads": [
        {
          "id": "apipayload_cbdb7034-ec3e-468d-aff7-3ccc3037664f",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_be8fe13e-5614-411b-a25d-33e0b20b13da",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_e7ac98ee-e3aa-4686-a897-5995ac8e48b0",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_ff2920db-bfcb-4ed3-833d-aa6d5b6350ee",
          "name": "400",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f7e37cf1-1587-4c43-be3d-be84fd133904",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_e4f91ee8-31a6-42d1-8a9e-eb65cb1141a1",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_d4694432-45ee-4c64-a028-fc4796ec01c2",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_9be8260f-274d-4330-b7f5-029d11e27e14",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_45a3bbf2-9956-4ff4-83f1-9c85ad3f4c25",
          "name": "400",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "The collection ID in the path does not match the collection ID in the request body.",
                  "name": "collectionMismatchError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_a6af29fb-a3ef-4976-921c-d695eefbdafe",
          "name": "404",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "details": {
                    "id": "1d3daef4-2037-4584-ab86-bafd8c8f8a54",
                    "item": "collection"
                  },
                  "message": "The specified item does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_8b5aaaeb-a329-4c58-aaa2-3be67dda3f8c",
          "name": "404",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_beb59732-53ec-4c20-aa5e-bac297f8f4ef",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "details": {
                    "id": "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                    "item": "collection"
                  },
                  "message": "The specified item does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_07295a8a-b9e5-4063-a08f-4440f230be6a",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_96e59bfe-d47e-4edd-9126-dfce910f0e3d",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_02a16f27-3789-4a3a-89b1-a91c96f46d5c",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_bf2c11dc-4ac9-4f52-b297-a530c234931f",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_cdbc238b-963f-4167-a672-2ccb91d1ccde",
          "name": "400",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "Missing required property: environment",
                  "name": "malformedRequestError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "message": "The specified workspace does not exist.",
                "name": "instanceNotFoundError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                },
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message"
                ],
                "title": "Error",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Specifiedworkspace/entitiesdonotexist",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3e7dd275-2f4d-45ce-94bd-5f2d0c77e3c8",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_ec5ec902-d39b-4be9-ad15-54d2fada5ec0",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_09372dfe-7f18-4f7c-af08-985ddc7ba2a6",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_029471f4-bb25-4cb5-98b4-337e7b963b91",
          "name": "404",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "The specified environment does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_d9b58cfa-6745-4614-a2bc-0aeebff98dd9",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_1a08cf12-f00c-41c5-8e64-62ac01725224",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_5cecc549-5a7c-4234-b2a7-ed6e823d2874",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_52d11401-88c6-4e64-97e9-b60f4732289e",
          "name": "400",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "Invalid type: null (expected object) at environment.values.0",
                  "name": "malformedRequestError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3f149022-83a6-4819-8bfb-e0ba17e7bdb1",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_469739e1-4c97-42dd-9ee1-26e5ee93d483",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_150c2fc4-ff1f-44be-9721-8bea6b157196",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_a83a70f6-5ed4-4da1-a6bb-ee04b25d8a55",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_af6ad117-5387-4ffc-926b-b248f30a662b",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_24c598cc-417f-4bbb-bca2-9c73d7e42696",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
          "examples": {
            "response": {
              "value": {
                "monitor": {
                  "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                  "name": "Monitor Name",
                  "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                }
              }
            }
          },
          "schema": {
            "example": {
              "monitor": {
                "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                "name": "Monitor Name",
                "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
              }
            },
            "properties": {
              "monitor": {
                "example": {
                  "id": "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                  "name": "Monitor Name",
                  "uid": "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "uid": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "uid"
                ],
                "title": "Monitor3",
                "type": "object"
              }
            },
            "required": [
              "monitor"
            ],
            "title": "CreateMonitorinaWorkspace",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f2436ffe-08cd-4baa-bb65-663fae084772",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
          "examples": {
            "response": {
              "value": {
                "environment": {
                  "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                  "name": "Sample Environment Name (required)",
                  "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                }
              }
            }
          },
          "schema": {
            "example": {
              "environment": {
                "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                "name": "Sample Environment Name (required)",
                "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
              }
            },
            "properties": {
              "environment": {
                "example": {
                  "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                  "name": "Sample Environment Name (required)",
                  "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "uid": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "uid"
                ],
                "title": "Environment3",
                "type": "object"
              }
            },
            "required": [
              "environment"
            ],
            "title": "CreateEnvironmentinaWorkspace",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_c09c3d9c-7748-493a-b1cb-05431c3d2b53",
          "name": "404",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "The specified workspace does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "message": "The specified workspace does not exist.",
                "name": "instanceNotFoundError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                },
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message"
                ],
                "title": "Error",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Specifiedworkspace/entitiesdonotexist",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_53948be9-289c-49c9-b27b-16fb9dcf420b",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_aa8030f1-2962-4e14-9d40-0c00346186a8",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_d8e6890d-6da5-4c62-b479-ede612404da0",
          "name": "404",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "The specified monitor does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_d016f204-9a13-4cd6-b7c8-4f8ceef23f4e",
          "name": "404",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_6ee0d054-4745-4218-967c-ea682d6b81b5",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "The specified monitor does not exist.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_cc4d975d-66aa-41a5-a361-b4b53e667362",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"e956ff02-7597-4f8d-a5e7-1c18208c9e56\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56\"\n    }\n  ]\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
          "examples": {
            "response": {
              "value": {
                "collections": [
                  {
                    "id": "e956ff02-7597-4f8d-a5e7-1c18208c9e56",
                    "name": "Swagger Petstore",
                    "uid": "2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56"
                  }
                ]
              }
            }
          },
          "schema": {
            "example": {
              "collections": [
                {
                  "id": "e956ff02-7597-4f8d-a5e7-1c18208c9e56",
                  "name": "Swagger Petstore",
                  "uid": "2282-e956ff02-7597-4f8d-a5e7-1c18208c9e56"
                }
              ]
            },
            "properties": {
              "collections": {
                "items": {
                  "example": {
                    "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                    "name": "Sample Collection",
                    "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                  },
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "uid"
                  ],
                  "title": "Collection3",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "collections"
            ],
            "title": "Success:ImporttoaspecificworkspacewithworkspaceIDpassedintheheaders",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_1b033cd3-f996-4ceb-b3f4-961e4a61defc",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\",\n        \"updatedAt\": \"2019-08-20T10:18:13Z\"\n      }\n    }\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_2fa2570d-ed8b-4c43-8d19-937d277e1e2b",
          "examples": {
            "response": {
              "value": {
                "relations": {
                  "contracttest": {
                    "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                      "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                      "name": "C test",
                      "updatedAt": "2019-08-29T10:18:11Z"
                    }
                  },
                  "integrationtest": {
                    "521b0486-ab91-4d3a-9189-43c9380a0533": {
                      "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                      "name": "C1",
                      "updatedAt": "2019-08-29T11:40:39Z"
                    },
                    "a236b715-e682-460b-97b6-c1db24f7612e": {
                      "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                      "name": "C test",
                      "updatedAt": "2019-08-29T10:18:11Z"
                    }
                  },
                  "mock": {
                    "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                      "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                      "name": "Mock",
                      "updatedAt": "2019-08-20T10:18:13Z",
                      "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                    }
                  }
                }
              }
            }
          },
          "schema": {
            "example": {
              "relations": {
                "contracttest": {
                  "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                    "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                    "name": "C test",
                    "updatedAt": "2019-08-29T10:18:11Z"
                  }
                },
                "integrationtest": {
                  "521b0486-ab91-4d3a-9189-43c9380a0533": {
                    "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                    "name": "C1",
                    "updatedAt": "2019-08-29T11:40:39Z"
                  },
                  "a236b715-e682-460b-97b6-c1db24f7612e": {
                    "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                    "name": "C test",
                    "updatedAt": "2019-08-29T10:18:11Z"
                  }
                },
                "mock": {
                  "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                    "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                    "name": "Mock",
                    "updatedAt": "2019-08-20T10:18:13Z",
                    "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                  }
                }
              }
            },
            "properties": {
              "relations": {
                "example": {
                  "contracttest": {
                    "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                      "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                      "name": "C test",
                      "updatedAt": "2019-08-29T10:18:11Z"
                    }
                  },
                  "integrationtest": {
                    "521b0486-ab91-4d3a-9189-43c9380a0533": {
                      "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                      "name": "C1",
                      "updatedAt": "2019-08-29T11:40:39Z"
                    },
                    "a236b715-e682-460b-97b6-c1db24f7612e": {
                      "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                      "name": "C test",
                      "updatedAt": "2019-08-29T10:18:11Z"
                    }
                  },
                  "mock": {
                    "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                      "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                      "name": "Mock",
                      "updatedAt": "2019-08-20T10:18:13Z",
                      "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                    }
                  }
                },
                "properties": {
                  "contracttest": {
                    "example": {
                      "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                        "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name": "C test",
                        "updatedAt": "2019-08-29T10:18:11Z"
                      }
                    },
                    "properties": {
                      "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2": {
                        "example": {
                          "id": "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        },
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "updatedAt"
                        ],
                        "title": "2a9b8fa888b74b8683728e3f6f6e07f2",
                        "type": "object"
                      }
                    },
                    "required": [
                      "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                    ],
                    "title": "Contracttest",
                    "type": "object"
                  },
                  "integrationtest": {
                    "example": {
                      "521b0486-ab91-4d3a-9189-43c9380a0533": {
                        "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name": "C1",
                        "updatedAt": "2019-08-29T11:40:39Z"
                      },
                      "a236b715-e682-460b-97b6-c1db24f7612e": {
                        "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                        "name": "C test",
                        "updatedAt": "2019-08-29T10:18:11Z"
                      }
                    },
                    "properties": {
                      "521b0486-ab91-4d3a-9189-43c9380a0533": {
                        "example": {
                          "id": "521b0486-ab91-4d3a-9189-43c9380a0533",
                          "name": "C1",
                          "updatedAt": "2019-08-29T11:40:39Z"
                        },
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "updatedAt"
                        ],
                        "title": "521b0486Ab914d3a918943c9380a0533",
                        "type": "object"
                      },
                      "a236b715-e682-460b-97b6-c1db24f7612e": {
                        "example": {
                          "id": "a236b715-e682-460b-97b6-c1db24f7612e",
                          "name": "C test",
                          "updatedAt": "2019-08-29T10:18:11Z"
                        },
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "updatedAt"
                        ],
                        "title": "A236b715E682460b97b6C1db24f7612e",
                        "type": "object"
                      }
                    },
                    "required": [
                      "521b0486-ab91-4d3a-9189-43c9380a0533",
                      "a236b715-e682-460b-97b6-c1db24f7612e"
                    ],
                    "title": "Integrationtest",
                    "type": "object"
                  },
                  "mock": {
                    "example": {
                      "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                        "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                        "name": "Mock",
                        "updatedAt": "2019-08-20T10:18:13Z",
                        "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                      }
                    },
                    "properties": {
                      "4ccd755f-2c80-481b-a262-49b55e12f5e1": {
                        "example": {
                          "id": "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                          "name": "Mock",
                          "updatedAt": "2019-08-20T10:18:13Z",
                          "url": "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                        },
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "url",
                          "updatedAt"
                        ],
                        "title": "4ccd755f2c80481bA26249b55e12f5e1",
                        "type": "object"
                      }
                    },
                    "required": [
                      "4ccd755f-2c80-481b-a262-49b55e12f5e1"
                    ],
                    "title": "Mock7",
                    "type": "object"
                  }
                },
                "required": [
                  "contracttest",
                  "integrationtest",
                  "mock"
                ],
                "title": "Relations1",
                "type": "object"
              }
            },
            "required": [
              "relations"
            ],
            "title": "GetlinkedrelationsforanAPIversion",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f7356253-2717-4768-bab1-bb436c31a8a2",
          "name": "400",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "details": {
                    "param": "type"
                  },
                  "message": "The request body is missing a value for the type parameter. Check your request and try again.",
                  "name": "paramMissingError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "details": {
                  "param": "type"
                },
                "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                "name": "invalidParamsError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "details": {
                    "param": "schedule.timezone"
                  },
                  "message": "The request had invalid parameters",
                  "name": "invalidParamsError"
                },
                "properties": {
                  "details": {
                    "example": {
                      "param": "schedule.timezone"
                    },
                    "properties": {
                      "param": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "param"
                    ],
                    "title": "Details3",
                    "type": "object"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message",
                  "details"
                ],
                "title": "Error11",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Error:InvalidParams",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_86b3150f-004d-4306-a879-8821c47e0bd0",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"createdAt\": \"2019-07-26T11:24:15Z\",\n    \"updatedAt\": \"2019-08-09T09:27:36Z\",\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdBy\": \"12\",\n    \"updatedBy\": \"5665\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
          "examples": {
            "response": {
              "value": {
                "version": {
                  "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                  "createdAt": "2019-07-26T11:24:15Z",
                  "createdBy": "12",
                  "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                  "name": "2.0",
                  "updatedAt": "2019-08-09T09:27:36Z",
                  "updatedBy": "5665"
                }
              }
            }
          },
          "schema": {
            "example": {
              "version": {
                "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                "createdAt": "2019-07-26T11:24:15Z",
                "createdBy": "12",
                "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                "name": "2.0",
                "updatedAt": "2019-08-09T09:27:36Z",
                "updatedBy": "5665"
              }
            },
            "properties": {
              "version": {
                "example": {
                  "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                  "createdAt": "2019-07-26T11:24:15Z",
                  "createdBy": "12",
                  "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                  "name": "2.0",
                  "updatedAt": "2019-08-09T09:27:36Z",
                  "updatedBy": "5665"
                },
                "properties": {
                  "api": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  },
                  "updatedBy": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "createdAt",
                  "updatedAt",
                  "api",
                  "createdBy",
                  "updatedBy"
                ],
                "title": "Version3",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "UpdateanAPIversion",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_a5c79bd5-6df1-4b9b-b31d-44afffdf8f63",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"versions\": [\n    {\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"description\": \"Description\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"00932d3b-20f1-454f-a77e-38b4023163ea\",\n      \"name\": \"0.2\",\n      \"summary\": \"Summary\",\n      \"description\": \"Description\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_2b52f79d-79ec-48f5-ab59-3fd8942be3dd",
          "examples": {
            "response": {
              "value": {
                "versions": [
                  {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "Description",
                    "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                    "name": "0.1",
                    "summary": "Summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  },
                  {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "Description",
                    "id": "00932d3b-20f1-454f-a77e-38b4023163ea",
                    "name": "0.2",
                    "summary": "Summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                ]
              }
            }
          },
          "schema": {
            "example": {
              "versions": [
                {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "Description",
                  "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                  "name": "0.1",
                  "summary": "Summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "Description",
                  "id": "00932d3b-20f1-454f-a77e-38b4023163ea",
                  "name": "0.2",
                  "summary": "Summary",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              ]
            },
            "properties": {
              "versions": {
                "items": {
                  "example": {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "Description",
                    "id": "024660a6-c837-46ca-91d8-7e8dd7c669de",
                    "name": "0.1",
                    "summary": "Summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  },
                  "properties": {
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "summary",
                    "description",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ],
                  "title": "Version6",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "versions"
            ],
            "title": "GetAllAPIversions",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f67824fc-7f9d-4259-b53d-c1301ada7680",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_0cad2af0-c792-4c8f-833e-cea56c626084",
          "examples": {
            "response": {
              "value": {
                "api": {
                  "id": "387c2863-6ee3-4a56-8210-225f774edade"
                }
              }
            }
          },
          "schema": {
            "example": {
              "api": {
                "id": "387c2863-6ee3-4a56-8210-225f774edade"
              }
            },
            "properties": {
              "api": {
                "example": {
                  "id": "387c2863-6ee3-4a56-8210-225f774edade"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "title": "Api4",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "DeleteanAPI",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_6d1fcb3a-91f8-4e2a-aade-b4bd8132c9f3",
          "name": "403",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "Forbidden",
          "type": "apipayload",
          "statusCode": 403,
          "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "You do not have enough permissions to perform this action.",
                  "name": "forbiddenError"
                }
              }
            }
          },
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_643d3bea-6a25-419f-a888-624573f930a9",
          "name": "404",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
          "headers": null,
          "description": "Not Found",
          "type": "apipayload",
          "statusCode": 404,
          "apiendpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "Instance not found in the database.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "message": "The specified workspace does not exist.",
                "name": "instanceNotFoundError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                },
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message"
                ],
                "title": "Error",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Specifiedworkspace/entitiesdonotexist",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_b4c23260-34e5-4614-a29c-d187e67f9ce9",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_bd442cec-065f-4a36-946a-4599caab30fd",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_b070dca4-929d-4cd8-b383-71ca7b60b8a4",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_8871bca3-2bfc-4642-93b0-e29f6ff8d033",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_2721339d-ffbb-4735-8cf5-344a38c55132",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_fc11b207-3800-4292-a61d-3ba8a1e046ab",
          "examples": {
            "response": {
              "value": {
                "workspace": {
                  "id": "{{workspace_id}}"
                }
              }
            }
          },
          "schema": {
            "example": {
              "workspace": {
                "id": "{{workspace_id}}"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "id": "{{workspace_id}}"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "title": "Workspace6",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "SuccessfulResponse9",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_5c306b9c-75eb-475b-bf27-969eefff05df",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_216c6409-e991-41c0-b38f-cb2d9985ae4e",
          "examples": {
            "response": {
              "value": {
                "version": {
                  "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                }
              }
            }
          },
          "schema": {
            "example": {
              "version": {
                "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
              }
            },
            "properties": {
              "version": {
                "example": {
                  "id": "03c17f53-7e2e-427d-b55a-006b244f29ff"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "title": "Version4",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "DeleteanAPIversion",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_2f7d8538-bb58-455b-83a5-d317a75f39f6",
          "name": "400",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "details": {
                    "param": "schedule.timezone"
                  },
                  "message": "The request had invalid parameters",
                  "name": "invalidParamsError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "details": {
                  "param": "type"
                },
                "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                "name": "invalidParamsError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "details": {
                    "param": "schedule.timezone"
                  },
                  "message": "The request had invalid parameters",
                  "name": "invalidParamsError"
                },
                "properties": {
                  "details": {
                    "example": {
                      "param": "schedule.timezone"
                    },
                    "properties": {
                      "param": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "param"
                    ],
                    "title": "Details3",
                    "type": "object"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message",
                  "details"
                ],
                "title": "Error11",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Error:InvalidParams",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3e8e4542-d05e-4175-b4d9-968a845155c6",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
          "examples": {
            "response": {
              "value": {
                "workspace": {
                  "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                  "name": "New Workspace"
                }
              }
            }
          },
          "schema": {
            "example": {
              "workspace": {
                "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                "name": "New Workspace"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                  "name": "New Workspace"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "title": "Workspace3",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "SuccessfulResponse7",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_eac403a2-9859-4651-bf90-c15ab3840fae",
          "name": "400",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "Instance not found in the database.",
                  "name": "instanceNotFoundError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "message": "The specified workspace does not exist.",
                "name": "instanceNotFoundError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                },
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message"
                ],
                "title": "Error",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Specifiedworkspace/entitiesdonotexist",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_fcbd5204-bea2-4de4-b7c7-b5b32fa83326",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\",\n    \"description\": \"Demos.\",\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      },\n      {\n        \"id\": \"356fe068-a0f8-4f31-b34d-d12149eac681\",\n        \"name\": \"Mock demo - response code\",\n        \"uid\": \"1234-356fe068-a0f8-4f31-b34d-d12149eac681\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      },\n      {\n        \"id\": \"24c45c84-5147-4c15-bb9a-c3186b81d3cc\",\n        \"name\": \"Mock Demo - response code\",\n        \"uid\": \"1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc\"\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_7c5a9bf6-c5c0-4a7f-ad80-53ab43cc1e5f",
          "examples": {
            "response": {
              "value": {
                "workspace": {
                  "collections": [
                    {
                      "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                      "name": "Mock demo - collection",
                      "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                    },
                    {
                      "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                      "name": "Mock demo - response code",
                      "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                    }
                  ],
                  "description": "Demos.",
                  "environments": [
                    {
                      "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                      "name": "Mock demo - CNX",
                      "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                    },
                    {
                      "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                      "name": "Mock Demo - response code",
                      "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                    }
                  ],
                  "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                  "name": "Demo workspace",
                  "type": "personal"
                }
              }
            }
          },
          "schema": {
            "example": {
              "workspace": {
                "collections": [
                  {
                    "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                    "name": "Mock demo - collection",
                    "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                  },
                  {
                    "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                    "name": "Mock demo - response code",
                    "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                  }
                ],
                "description": "Demos.",
                "environments": [
                  {
                    "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                    "name": "Mock demo - CNX",
                    "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                  },
                  {
                    "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                    "name": "Mock Demo - response code",
                    "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                  }
                ],
                "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                "name": "Demo workspace",
                "type": "personal"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "collections": [
                    {
                      "id": "7c31b469-bd43-4411-9283-6d397855ee0e",
                      "name": "Mock demo - collection",
                      "uid": "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                    },
                    {
                      "id": "356fe068-a0f8-4f31-b34d-d12149eac681",
                      "name": "Mock demo - response code",
                      "uid": "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                    }
                  ],
                  "description": "Demos.",
                  "environments": [
                    {
                      "id": "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                      "name": "Mock demo - CNX",
                      "uid": "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                    },
                    {
                      "id": "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                      "name": "Mock Demo - response code",
                      "uid": "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                    }
                  ],
                  "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                  "name": "Demo workspace",
                  "type": "personal"
                },
                "properties": {
                  "collections": {
                    "items": {
                      "example": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Collection3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "environments": {
                    "items": {
                      "example": {
                        "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                        "name": "Sample Environment Name (required)",
                        "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Environment3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "type",
                  "description",
                  "collections",
                  "environments"
                ],
                "title": "Workspace1",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "ValidResponse5",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_96e158cb-5d2b-4c4b-98a3-b5ed8dc10a8c",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\",\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
          "examples": {
            "response": {
              "value": {
                "version": {
                  "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                  "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                  "name": "1.0"
                }
              }
            }
          },
          "schema": {
            "example": {
              "version": {
                "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                "name": "1.0"
              }
            },
            "properties": {
              "version": {
                "example": {
                  "api": "2b95d07c-8379-4bd1-924f-e7e1af185284",
                  "id": "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                  "name": "1.0"
                },
                "properties": {
                  "api": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "api"
                ],
                "title": "Version1",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "CreateAPIversion",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_8b5a1e4d-194c-45e5-91d8-5dbe8ee632d6",
          "name": "400",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The request body has invalid values for the type parameter. Value must be one of file, string, json\",\n    \"details\": {\n      \"param\": \"type\"\n    }\n  }\n}",
          "headers": null,
          "description": "Bad Request",
          "type": "apipayload",
          "statusCode": 400,
          "apiendpoint": "apiendpoint_2e871aee-8036-4548-b713-e3e51dbef57d",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "details": {
                    "param": "type"
                  },
                  "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                  "name": "invalidParamsError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "details": {
                  "param": "type"
                },
                "message": "The request body has invalid values for the type parameter. Value must be one of file, string, json",
                "name": "invalidParamsError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "details": {
                    "param": "schedule.timezone"
                  },
                  "message": "The request had invalid parameters",
                  "name": "invalidParamsError"
                },
                "properties": {
                  "details": {
                    "example": {
                      "param": "schedule.timezone"
                    },
                    "properties": {
                      "param": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "param"
                    ],
                    "title": "Details3",
                    "type": "object"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message",
                  "details"
                ],
                "title": "Error11",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Error:InvalidParams",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_bfd2d752-cf16-45e2-88ca-01e189c0e05e",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"createdBy\": \"5665\",\n    \"updatedBy\": \"5665\",\n    \"createdAt\": \"2019-07-21T16:31:15Z\",\n    \"updatedAt\": \"2019-07-21T16:31:15Z\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_6acfd914-9fc5-4b5a-8637-30a2c72111e1",
          "examples": {
            "response": {
              "value": {
                "version": {
                  "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                  "createdAt": "2019-07-21T16:31:15Z",
                  "createdBy": "5665",
                  "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                  "name": "0.1",
                  "schema": [
                    "3484cd1e-e00d-4c39-aea4-539663afe898"
                  ],
                  "updatedAt": "2019-07-21T16:31:15Z",
                  "updatedBy": "5665"
                }
              }
            }
          },
          "schema": {
            "example": {
              "version": {
                "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                "createdAt": "2019-07-21T16:31:15Z",
                "createdBy": "5665",
                "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                "name": "0.1",
                "schema": [
                  "3484cd1e-e00d-4c39-aea4-539663afe898"
                ],
                "updatedAt": "2019-07-21T16:31:15Z",
                "updatedBy": "5665"
              }
            },
            "properties": {
              "version": {
                "example": {
                  "api": "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                  "createdAt": "2019-07-21T16:31:15Z",
                  "createdBy": "5665",
                  "id": "03c17f53-7e2e-427d-b55a-006b244f29ff",
                  "name": "0.1",
                  "schema": [
                    "3484cd1e-e00d-4c39-aea4-539663afe898"
                  ],
                  "updatedAt": "2019-07-21T16:31:15Z",
                  "updatedBy": "5665"
                },
                "properties": {
                  "api": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "schema": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "updatedAt": {
                    "type": "string"
                  },
                  "updatedBy": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "api",
                  "schema",
                  "createdBy",
                  "updatedBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Version5",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "GetanAPIversion",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_9d567c10-de69-4727-ab0c-eeb19fa743da",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
          "examples": {
            "response": {
              "value": {
                "collections": [
                  {
                    "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                    "name": "Swagger Petstore",
                    "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                  }
                ]
              }
            }
          },
          "schema": {
            "example": {
              "collections": [
                {
                  "id": "b31be584-1b1e-4444-b581-761edf88fe77",
                  "name": "Swagger Petstore",
                  "uid": "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                }
              ]
            },
            "properties": {
              "collections": {
                "items": {
                  "example": {
                    "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                    "name": "Sample Collection",
                    "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                  },
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "uid"
                  ],
                  "title": "Collection3",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "collections"
            ],
            "title": "Success:ImporttoaspecificworkspacewithworkspaceIDpassedasaqueryparameter",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_d59f7daa-fa36-45b4-b46d-83131719fe31",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
          "examples": {
            "response": {
              "value": {
                "workspace": {
                  "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                  "name": "New Workspace"
                }
              }
            }
          },
          "schema": {
            "example": {
              "workspace": {
                "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                "name": "New Workspace"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "id": "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                  "name": "New Workspace"
                },
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "title": "Workspace3",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "SuccessfulResponse7",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_7bbf529c-6f1b-4ddb-b893-e69f66cc0428",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    },\n    {\n      \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n      \"name\": \"Team workspace\",\n      \"type\": \"team\"\n    }\n  ]\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_6fa345b3-82d3-46f7-b210-98f13fdc2c82",
          "examples": {
            "response": {
              "value": {
                "workspaces": [
                  {
                    "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                    "name": "My Workspace",
                    "type": "personal"
                  },
                  {
                    "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                    "name": "Team workspace",
                    "type": "team"
                  }
                ]
              }
            }
          },
          "schema": {
            "example": {
              "workspaces": [
                {
                  "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                  "name": "My Workspace",
                  "type": "personal"
                },
                {
                  "id": "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                  "name": "Team workspace",
                  "type": "team"
                }
              ]
            },
            "properties": {
              "workspaces": {
                "items": {
                  "example": {
                    "id": "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                    "name": "My Workspace",
                    "type": "personal"
                  },
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type"
                  ],
                  "title": "Workspace",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "workspaces"
            ],
            "title": "ValidResponse4",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f35bb61c-6d34-4951-930b-94744668f3a6",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
          "examples": {
            "response": {
              "value": {
                "schema": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "schema": {
                "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                "language": "yaml",
                "type": "openapi3",
                "updateBy": "5665",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "schema": {
                "example": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "updateBy": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "language",
                  "apiVersion",
                  "type",
                  "createdBy",
                  "updateBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Schema3",
                "type": "object"
              }
            },
            "required": [
              "schema"
            ],
            "title": "Updateschema",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_e71eb4a9-0e69-4922-86eb-96745b89a7ee",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"apis\": [\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n      \"name\": \"Sync API\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n      \"name\": \"Sync API\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    },\n    {\n      \"id\": \"387c2863-6ee3-4a56-8210-225f774edhdh\",\n      \"name\": \"Sync API 2\",\n      \"summary\": \"This is a summary\",\n      \"description\": \"This is a description.\",\n      \"createdBy\": \"5665\",\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_c17f86c7-1eb9-45c5-8264-ad23e01daa8b",
          "examples": {
            "response": {
              "value": {
                "apis": [
                  {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is a description.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  },
                  {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is a description.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  },
                  {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is a description.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edhdh",
                    "name": "Sync API 2",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  }
                ]
              }
            }
          },
          "schema": {
            "example": {
              "apis": [
                {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is a description.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is a description.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is a description.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edhdh",
                  "name": "Sync API 2",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              ]
            },
            "properties": {
              "apis": {
                "items": {
                  "example": {
                    "createdAt": "2019-02-12 19:34:49",
                    "createdBy": "5665",
                    "description": "This is supposed to handle markdown *descriptions*.",
                    "id": "387c2863-6ee3-4a56-8210-225f774edade",
                    "name": "Sync API",
                    "summary": "This is a summary",
                    "updatedAt": "2019-02-12 19:34:49"
                  },
                  "properties": {
                    "createdAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "summary",
                    "description",
                    "createdBy",
                    "createdAt",
                    "updatedAt"
                  ],
                  "title": "Api1",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "apis"
            ],
            "title": "GetallAPIs",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_7063d7f9-33e0-450c-bd8c-37a389bb0c93",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
          "examples": {
            "response": {
              "value": {
                "api": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is supposed to handle markdown *descriptions*.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "api": {
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "description": "This is supposed to handle markdown *descriptions*.",
                "id": "387c2863-6ee3-4a56-8210-225f774edade",
                "name": "Sync API",
                "summary": "This is a summary",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "api": {
                "example": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is supposed to handle markdown *descriptions*.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "summary",
                  "description",
                  "createdBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Api1",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "CreateAPI",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_bf2d6dae-5eb8-4d4f-85a5-540a7c397864",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is a description.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
          "examples": {
            "response": {
              "value": {
                "api": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is a description.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "api": {
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "description": "This is a description.",
                "id": "387c2863-6ee3-4a56-8210-225f774edade",
                "name": "Sync API",
                "summary": "This is a summary",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "api": {
                "example": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is supposed to handle markdown *descriptions*.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "summary",
                  "description",
                  "createdBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Api1",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "UpdateanAPI",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_7319a59c-8c39-4b5e-bff6-fec0016a8b64",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"description\": \"This is a description.This is a description.\",\n    \"createdBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_b4d53ccc-87c7-465b-a7a9-d8af6e93923f",
          "examples": {
            "response": {
              "value": {
                "api": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is a description.This is a description.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "api": {
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "description": "This is a description.This is a description.",
                "id": "387c2863-6ee3-4a56-8210-225f774edade",
                "name": "Sync API",
                "summary": "This is a summary",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "api": {
                "example": {
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "description": "This is supposed to handle markdown *descriptions*.",
                  "id": "387c2863-6ee3-4a56-8210-225f774edade",
                  "name": "Sync API",
                  "summary": "This is a summary",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "summary",
                  "description",
                  "createdBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Api1",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "GetsingleAPI",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_171e1d54-c05a-435d-aefd-97c3bce74b8d",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
          "examples": {
            "response": {
              "value": {
                "schema": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "schema": {
                "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                "language": "yaml",
                "type": "openapi3",
                "updateBy": "5665",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "schema": {
                "example": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "updateBy": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "language",
                  "apiVersion",
                  "type",
                  "createdBy",
                  "updateBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Schema3",
                "type": "object"
              }
            },
            "required": [
              "schema"
            ],
            "title": "Createschema",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3b1ea1db-0acd-4363-88d8-3d652c1e0846",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_02627dfe-a4e7-4cea-92f6-145ea4d6ac64",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_ca71fb2b-05e1-4c4b-8094-f6ee24ce7782",
          "name": "403",
          "format": "JSON",
          "body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"The specified workspace does not exist.\"\n  }\n}",
          "headers": null,
          "description": "Forbidden",
          "type": "apipayload",
          "statusCode": 403,
          "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
          "examples": {
            "response": {
              "value": {
                "error": {
                  "message": "You do not have access to update this workspace.",
                  "name": "forbiddenError"
                }
              }
            }
          },
          "schema": {
            "example": {
              "error": {
                "message": "The specified workspace does not exist.",
                "name": "instanceNotFoundError"
              }
            },
            "properties": {
              "error": {
                "example": {
                  "message": "Missing required property: name at info",
                  "name": "malformedRequestError"
                },
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "message"
                ],
                "title": "Error",
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "title": "Specifiedworkspace/entitiesdonotexist",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_74db5231-928e-4a4a-b125-747a26f6fe63",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_26233708-b911-425d-8f80-605a9f214312",
          "name": "200",
          "format": "JSON",
          "body": "{}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_a109da37-0f40-42bc-8d10-13577147c700",
          "examples": {},
          "schema": {},
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3587dcbb-6129-4f49-b0d8-e9ea8761f6e0",
          "name": "200",
          "format": "JSON",
          "body": "{\n  \"schema\": {\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"type\": \"openapi3\",\n    \"createdBy\": \"5665\",\n    \"updateBy\": \"5665\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": 200,
          "apiendpoint": "apiendpoint_eed810e6-66b5-4126-a6b1-f702cdadb23e",
          "examples": {
            "response": {
              "value": {
                "schema": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                }
              }
            }
          },
          "schema": {
            "example": {
              "schema": {
                "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                "createdAt": "2019-02-12 19:34:49",
                "createdBy": "5665",
                "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                "language": "yaml",
                "type": "openapi3",
                "updateBy": "5665",
                "updatedAt": "2019-02-12 19:34:49"
              }
            },
            "properties": {
              "schema": {
                "example": {
                  "apiVersion": "ad810c39-df60-434e-a76f-a2192cd8d81f",
                  "createdAt": "2019-02-12 19:34:49",
                  "createdBy": "5665",
                  "id": "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                  "language": "yaml",
                  "type": "openapi3",
                  "updateBy": "5665",
                  "updatedAt": "2019-02-12 19:34:49"
                },
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "language": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "updateBy": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "language",
                  "apiVersion",
                  "type",
                  "createdBy",
                  "updateBy",
                  "createdAt",
                  "updatedAt"
                ],
                "title": "Schema3",
                "type": "object"
              }
            },
            "required": [
              "schema"
            ],
            "title": "Getschema",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_67242d7f-dfc0-4bb4-be4a-f1249ac600c6",
          "name": "CreateaFork",
          "format": "JSON",
          "body": "{\n  \"name\": \"Fork name\"\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_b3d95712-3a39-4795-88ac-cb154e4f0fe4",
          "examples": {},
          "schema": {
            "example": {
              "name": "Fork name"
            },
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "title": "CreateaForkRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_1fc4c797-9648-47aa-bc68-7a6a8ba2079e",
          "name": "CreateAPI",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"name\": \"Sync Service API\",\n    \"summary\": \"This is supposed to be a short summary.\",\n    \"description\": \"This is description.\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_edf0ff44-4ab8-46bd-9c99-ee65efa36c20",
          "examples": {},
          "schema": {
            "example": {
              "api": {
                "description": "This is description.",
                "name": "Sync Service API",
                "summary": "This is supposed to be a short summary."
              }
            },
            "properties": {
              "api": {
                "example": {
                  "description": "This is description.",
                  "name": "Sync Service API",
                  "summary": "This is supposed to be a short summary."
                },
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "summary",
                  "description"
                ],
                "title": "Api",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "CreateAPIRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_9ed20274-8845-4bb2-8205-ee39515cbcaf",
          "name": "CreateAPIVersion",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"name\": \"1.0\",\n    \"source\": {\n      \"id\": \"{{apiVersionId}}\",\n      \"schema\": true,\n      \"relations\": {\n        \"monitor\": true,\n        \"mock\": true,\n        \"documentation\": true\n      }\n    }\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_d86b2307-817c-43dc-8e1b-4b68dbd2e983",
          "examples": {},
          "schema": {
            "example": {
              "version": {
                "name": "1.0",
                "source": {
                  "id": "{{apiVersionId}}",
                  "relations": {
                    "documentation": true,
                    "mock": true,
                    "monitor": true
                  },
                  "schema": true
                }
              }
            },
            "properties": {
              "version": {
                "example": {
                  "name": "1.0",
                  "source": {
                    "id": "{{apiVersionId}}",
                    "relations": {
                      "documentation": true,
                      "mock": true,
                      "monitor": true
                    },
                    "schema": true
                  }
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "source": {
                    "example": {
                      "id": "{{apiVersionId}}",
                      "relations": {
                        "documentation": true,
                        "mock": true,
                        "monitor": true
                      },
                      "schema": true
                    },
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relations": {
                        "example": {
                          "documentation": true,
                          "mock": true,
                          "monitor": true
                        },
                        "properties": {
                          "documentation": {
                            "type": "boolean"
                          },
                          "mock": {
                            "type": "boolean"
                          },
                          "monitor": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "monitor",
                          "mock",
                          "documentation"
                        ],
                        "title": "Relations",
                        "type": "object"
                      },
                      "schema": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "schema",
                      "relations"
                    ],
                    "title": "Source",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "source"
                ],
                "title": "Version",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "CreateAPIVersionRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_50d61d4d-9832-41ea-a879-054f5dc3a5ef",
          "name": "CreateCollection",
          "format": "JSON",
          "body": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_80fd87ef-83cc-4ce1-9538-19d30b02f499",
          "examples": {},
          "schema": {
            "example": {
              "collection": {
                "info": {
                  "description": "This is just a sample collection.",
                  "name": "Sample Collection {{$randomInt}}",
                  "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                },
                "item": [
                  {
                    "item": [
                      {
                        "name": "Sample POST Request",
                        "request": {
                          "body": {
                            "mode": "raw",
                            "raw": "{\"data\": \"123\"}"
                          },
                          "description": "This is a sample POST Request",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "method": "POST",
                          "url": "https://postman-echo.com/post"
                        }
                      }
                    ],
                    "name": "This is a folder"
                  },
                  {
                    "name": "Sample GET Request",
                    "request": {
                      "description": "This is a sample GET Request",
                      "method": "GET",
                      "url": "https://postman-echo/get"
                    }
                  }
                ]
              }
            },
            "properties": {
              "collection": {
                "example": {
                  "info": {
                    "description": "This is just a sample collection.",
                    "name": "Sample Collection {{$randomInt}}",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item": [
                    {
                      "item": [
                        {
                          "name": "Sample POST Request",
                          "request": {
                            "body": {
                              "mode": "raw",
                              "raw": "{\"data\": \"123\"}"
                            },
                            "description": "This is a sample POST Request",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "url": "https://postman-echo.com/post"
                          }
                        }
                      ],
                      "name": "This is a folder"
                    },
                    {
                      "name": "Sample GET Request",
                      "request": {
                        "description": "This is a sample GET Request",
                        "method": "GET",
                        "url": "https://postman-echo/get"
                      }
                    }
                  ]
                },
                "properties": {
                  "info": {
                    "example": {
                      "description": "This is just a sample collection.",
                      "name": "Sample Collection {{$randomInt}}",
                      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                    },
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "schema"
                    ],
                    "title": "Info1",
                    "type": "object"
                  },
                  "item": {
                    "items": {
                      "example": {
                        "item": [
                          {
                            "name": "Sample POST Request",
                            "request": {
                              "body": {
                                "mode": "raw",
                                "raw": "{\"data\": \"123\"}"
                              },
                              "description": "This is a sample POST Request",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "method": "POST",
                              "url": "https://postman-echo.com/post"
                            }
                          }
                        ],
                        "name": "This is a folder"
                      },
                      "properties": {
                        "item": {
                          "items": {
                            "example": {
                              "name": "Sample POST Request",
                              "request": {
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\"data\": \"123\"}"
                                },
                                "description": "This is a sample POST Request",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "url": "https://postman-echo.com/post"
                              }
                            },
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "request": {
                                "example": {
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\"data\": \"123\"}"
                                  },
                                  "description": "This is a sample POST Request",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "method": "POST",
                                  "url": "https://postman-echo.com/post"
                                },
                                "properties": {
                                  "body": {
                                    "example": {
                                      "mode": "raw",
                                      "raw": "{\"data\": \"123\"}"
                                    },
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "raw": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "mode",
                                      "raw"
                                    ],
                                    "title": "Body1",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "header": {
                                    "items": {
                                      "example": {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "value"
                                      ],
                                      "title": "Header1",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "method": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url",
                                  "method",
                                  "header",
                                  "body",
                                  "description"
                                ],
                                "title": "Request1",
                                "type": "object"
                              }
                            },
                            "required": [
                              "name",
                              "request"
                            ],
                            "title": "Item2",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "name": {
                          "type": "string"
                        },
                        "request": {
                          "example": {
                            "description": "This is a sample GET Request",
                            "method": "GET",
                            "url": "https://postman-echo/get"
                          },
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "method",
                            "description"
                          ],
                          "title": "Request2",
                          "type": "object"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Item1",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "info",
                  "item"
                ],
                "title": "Collection2",
                "type": "object"
              }
            },
            "required": [
              "collection"
            ],
            "title": "CreateCollectionRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_ebb16d5b-4241-42dd-a7e1-93e17bc97cd5",
          "name": "CreateEnvironment",
          "format": "JSON",
          "body": "{\n  \"environment\": {\n    \"name\": \"Sample Environment Name (required)\",\n    \"values\": [\n      {\n        \"key\": \"variable_name_1\",\n        \"value\": \"The value of the variable\"\n      },\n      {\n        \"key\": \"variable_name_2\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_5aee6b89-9cf4-438e-8213-f88e2387b379",
          "examples": {},
          "schema": {
            "example": {
              "environment": {
                "name": "Sample Environment Name (required)",
                "values": [
                  {
                    "key": "variable_name_1",
                    "value": "The value of the variable"
                  },
                  {
                    "key": "variable_name_2",
                    "value": ""
                  }
                ]
              }
            },
            "properties": {
              "environment": {
                "example": {
                  "name": "Sample Environment Name (required)",
                  "values": [
                    {
                      "key": "variable_name_1",
                      "value": "The value of the variable"
                    },
                    {
                      "key": "variable_name_2",
                      "value": ""
                    }
                  ]
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "values": {
                    "items": {
                      "example": {
                        "key": "variable_name_1",
                        "value": "The value of the variable"
                      },
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ],
                      "title": "Value1",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "values"
                ],
                "title": "Environment2",
                "type": "object"
              }
            },
            "required": [
              "environment"
            ],
            "title": "CreateEnvironmentRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_83415937-0a70-4b05-bc02-09de8e99da63",
          "name": "CreateMock",
          "format": "JSON",
          "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_184bef40-4f4a-47e5-a1ba-a5699a91a73f",
          "examples": {},
          "schema": {
            "example": {
              "mock": {
                "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
              }
            },
            "properties": {
              "mock": {
                "example": {
                  "collection": "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                  "environment": "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                },
                "properties": {
                  "collection": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  }
                },
                "required": [
                  "collection",
                  "environment"
                ],
                "title": "Mock2",
                "type": "object"
              }
            },
            "required": [
              "mock"
            ],
            "title": "CreateMockRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_0437f5ee-c1f5-463d-a5dc-1d13d0b3eba7",
          "name": "CreateMonitor",
          "format": "JSON",
          "body": "{\n  \"monitor\": {\n    \"name\": \"This is a Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * *\",\n      \"timezone\": \"Asia/Kolkata\"\n    },\n    \"collection\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"environment\": \"5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_fad8d3ef-2340-4d8f-a096-0803189aad07",
          "examples": {},
          "schema": {
            "example": {
              "monitor": {
                "collection": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                "environment": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                "name": "This is a Monitor Name",
                "schedule": {
                  "cron": "0 0 * * *",
                  "timezone": "Asia/Kolkata"
                }
              }
            },
            "properties": {
              "monitor": {
                "example": {
                  "collection": "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                  "environment": "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                  "name": "This is a Monitor Name",
                  "schedule": {
                    "cron": "0 0 * * *",
                    "timezone": "Asia/Kolkata"
                  }
                },
                "properties": {
                  "collection": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "schedule": {
                    "example": {
                      "cron": "0 0 * * *",
                      "timezone": "Asia/Kolkata"
                    },
                    "properties": {
                      "cron": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cron",
                      "timezone"
                    ],
                    "title": "Schedule1",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "schedule",
                  "collection",
                  "environment"
                ],
                "title": "Monitor2",
                "type": "object"
              }
            },
            "required": [
              "monitor"
            ],
            "title": "CreateMonitorRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_1a02cb4c-4484-48e0-acc1-80c0214bf9b1",
          "name": "CreateSchema",
          "format": "JSON",
          "body": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"{}\",\n    \"type\": \"openapi3\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_48a90818-10d8-4b99-86b6-156a47fac560",
          "examples": {},
          "schema": {
            "example": {
              "schema": {
                "language": "yaml",
                "schema": "{}",
                "type": "openapi3"
              }
            },
            "properties": {
              "schema": {
                "example": {
                  "language": "yaml",
                  "schema": "{}",
                  "type": "openapi3"
                },
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "language",
                  "schema",
                  "type"
                ],
                "title": "Schema2",
                "type": "object"
              }
            },
            "required": [
              "schema"
            ],
            "title": "CreateSchemaRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_290aacd6-08af-49ea-923c-df62af14c970",
          "name": "CreateWorkspace",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"name\": \"New Workspace\",\n    \"type\": \"personal\",\n    \"description\": \"Some description\",\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_a9dac015-5196-4511-9a00-57c351b50425",
          "examples": {},
          "schema": {
            "example": {
              "workspace": {
                "collections": [
                  {
                    "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                    "name": "Straw hats",
                    "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                  }
                ],
                "description": "Some description",
                "environments": [
                  {
                    "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                    "name": "env",
                    "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                  }
                ],
                "mocks": [
                  {
                    "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                  }
                ],
                "monitors": [
                  {
                    "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                  }
                ],
                "name": "New Workspace",
                "type": "personal"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "collections": [
                    {
                      "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                      "name": "Straw hats",
                      "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                    }
                  ],
                  "description": "Some description",
                  "environments": [
                    {
                      "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                      "name": "env",
                      "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                    }
                  ],
                  "mocks": [
                    {
                      "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                    }
                  ],
                  "monitors": [
                    {
                      "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                    }
                  ],
                  "name": "New Workspace",
                  "type": "personal"
                },
                "properties": {
                  "collections": {
                    "items": {
                      "example": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Collection3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "environments": {
                    "items": {
                      "example": {
                        "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                        "name": "Sample Environment Name (required)",
                        "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Environment3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "mocks": {
                    "items": {
                      "example": {
                        "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "title": "Mock5",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "monitors": {
                    "items": {
                      "example": {
                        "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "title": "Monitor7",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "description",
                  "collections",
                  "environments",
                  "mocks",
                  "monitors"
                ],
                "title": "Workspace2",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "CreateWorkspaceRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_de0bebdc-53b6-4222-a50b-aa35d5e03747",
          "name": "ImportexternalAPIspecification",
          "format": "JSON",
          "body": "{\n  \"type\": \"json\",\n  \"input\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"version\": \"1.0.0\",\n      \"title\": \"Swagger Petstore\",\n      \"license\": {\n        \"name\": \"MIT\"\n      }\n    },\n    \"servers\": [\n      {\n        \"url\": \"http://petstore.swagger.io/v1\"\n      }\n    ],\n    \"paths\": {\n      \"/pets\": {\n        \"get\": {\n          \"summary\": \"List all pets\",\n          \"operationId\": \"listPets\",\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"in\": \"query\",\n              \"description\": \"limit\",\n              \"required\": false,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"default\": {\n              \"description\": \"unexpected error\",\n              \"content\": {\n                \"application/json\": {\n                  \"schema\": {\n                    \"title\": \"Error\",\n                    \"example\": {\n                      \"name\": \"malformedRequestError\",\n                      \"message\": \"Missing required property: name at info\"\n                    },\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"name\",\n                      \"message\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"components\": {\n      \"schemas\": {\n        \"Error\": {\n          \"required\": [\n            \"code\",\n            \"message\"\n          ],\n          \"properties\": {\n            \"code\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"message\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_bb7b1c59-f179-4078-87a4-b026db8351ad",
          "examples": {},
          "schema": {
            "example": {
              "input": {
                "components": {
                  "schemas": {
                    "Error": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  }
                },
                "info": {
                  "license": {
                    "name": "MIT"
                  },
                  "title": "Swagger Petstore",
                  "version": "1.0.0"
                },
                "openapi": "3.0.0",
                "paths": {
                  "/pets": {
                    "get": {
                      "operationId": "listPets",
                      "parameters": [
                        {
                          "description": "limit",
                          "in": "query",
                          "name": "limit",
                          "required": false,
                          "schema": {
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      ],
                      "responses": {
                        "default": {
                          "content": {
                            "application/json": {
                              "schema": {
                                "example": {
                                  "message": "Missing required property: name at info",
                                  "name": "malformedRequestError"
                                },
                                "properties": {
                                  "message": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "message"
                                ],
                                "title": "Error",
                                "type": "object"
                              }
                            }
                          },
                          "description": "unexpected error"
                        }
                      },
                      "summary": "List all pets"
                    }
                  }
                },
                "servers": [
                  {
                    "url": "http://petstore.swagger.io/v1"
                  }
                ]
              },
              "type": "json"
            },
            "properties": {
              "input": {
                "example": {
                  "components": {
                    "schemas": {
                      "Error": {
                        "properties": {
                          "code": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ]
                      }
                    }
                  },
                  "info": {
                    "license": {
                      "name": "MIT"
                    },
                    "title": "Swagger Petstore",
                    "version": "1.0.0"
                  },
                  "openapi": "3.0.0",
                  "paths": {
                    "/pets": {
                      "get": {
                        "operationId": "listPets",
                        "parameters": [
                          {
                            "description": "limit",
                            "in": "query",
                            "name": "limit",
                            "required": false,
                            "schema": {
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        ],
                        "responses": {
                          "default": {
                            "content": {
                              "application/json": {}
                            },
                            "description": "unexpected error"
                          }
                        },
                        "summary": "List all pets"
                      }
                    }
                  },
                  "servers": [
                    {
                      "url": "http://petstore.swagger.io/v1"
                    }
                  ]
                },
                "properties": {
                  "components": {
                    "example": {
                      "schemas": {
                        "Error": {
                          "properties": {
                            "code": {
                              "format": "int32",
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ]
                        }
                      }
                    },
                    "properties": {
                      "schemas": {
                        "example": {
                          "Error": {
                            "properties": {
                              "code": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ]
                          }
                        },
                        "properties": {
                          "Error": {
                            "example": {
                              "properties": {
                                "code": {
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "code",
                                "message"
                              ]
                            },
                            "properties": {
                              "properties": {
                                "example": {
                                  "code": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "code": {
                                    "example": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "properties": {
                                      "format": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "format"
                                    ],
                                    "title": "Code",
                                    "type": "object"
                                  },
                                  "message": {
                                    "example": {
                                      "type": "string"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Message",
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "code",
                                  "message"
                                ],
                                "title": "Properties",
                                "type": "object"
                              },
                              "required": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "required",
                              "properties"
                            ],
                            "title": "Error21",
                            "type": "object"
                          }
                        },
                        "required": [
                          "Error"
                        ],
                        "title": "Schemas",
                        "type": "object"
                      }
                    },
                    "required": [
                      "schemas"
                    ],
                    "title": "Components",
                    "type": "object"
                  },
                  "info": {
                    "example": {
                      "license": {
                        "name": "MIT"
                      },
                      "title": "Swagger Petstore",
                      "version": "1.0.0"
                    },
                    "properties": {
                      "license": {
                        "example": {
                          "name": "MIT"
                        },
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "title": "License",
                        "type": "object"
                      },
                      "title": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "version",
                      "title",
                      "license"
                    ],
                    "title": "Info4",
                    "type": "object"
                  },
                  "openapi": {
                    "type": "string"
                  },
                  "paths": {
                    "example": {
                      "/pets": {
                        "get": {
                          "operationId": "listPets",
                          "parameters": [
                            {
                              "description": "limit",
                              "in": "query",
                              "name": "limit",
                              "required": false,
                              "schema": {
                                "format": "int32",
                                "type": "integer"
                              }
                            }
                          ],
                          "responses": {
                            "default": {
                              "content": {
                                "application/json": {}
                              },
                              "description": "unexpected error"
                            }
                          },
                          "summary": "List all pets"
                        }
                      }
                    },
                    "properties": {
                      "/pets": {
                        "example": {
                          "get": {
                            "operationId": "listPets",
                            "parameters": [
                              {
                                "description": "limit",
                                "in": "query",
                                "name": "limit",
                                "required": false,
                                "schema": {
                                  "format": "int32",
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "default": {
                                "content": {
                                  "application/json": {}
                                },
                                "description": "unexpected error"
                              }
                            },
                            "summary": "List all pets"
                          }
                        },
                        "properties": {
                          "get": {
                            "example": {
                              "operationId": "listPets",
                              "parameters": [
                                {
                                  "description": "limit",
                                  "in": "query",
                                  "name": "limit",
                                  "required": false,
                                  "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              ],
                              "responses": {
                                "default": {
                                  "content": {
                                    "application/json": {}
                                  },
                                  "description": "unexpected error"
                                }
                              },
                              "summary": "List all pets"
                            },
                            "properties": {
                              "operationId": {
                                "type": "string"
                              },
                              "parameters": {
                                "items": {
                                  "example": {
                                    "description": "limit",
                                    "in": "query",
                                    "name": "limit",
                                    "required": false,
                                    "schema": {
                                      "format": "int32",
                                      "type": "integer"
                                    }
                                  },
                                  "properties": {
                                    "description": {
                                      "type": "string"
                                    },
                                    "in": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    },
                                    "schema": {
                                      "example": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "properties": {
                                        "format": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "format"
                                      ],
                                      "title": "Schema",
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "in",
                                    "description",
                                    "required",
                                    "schema"
                                  ],
                                  "title": "Parameter",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "responses": {
                                "example": {
                                  "default": {
                                    "content": {
                                      "application/json": {}
                                    },
                                    "description": "unexpected error"
                                  }
                                },
                                "properties": {
                                  "default": {
                                    "example": {
                                      "content": {
                                        "application/json": {}
                                      },
                                      "description": "unexpected error"
                                    },
                                    "properties": {
                                      "content": {
                                        "example": {
                                          "application/json": {}
                                        },
                                        "properties": {
                                          "application/json": {
                                            "example": {},
                                            "properties": {
                                              "schema": {
                                                "properties": {
                                                  "$ref": {
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "$ref"
                                                ],
                                                "title": "Schema1",
                                                "type": "object"
                                              }
                                            },
                                            "required": [
                                              "schema"
                                            ],
                                            "title": "ApplicationJson",
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "application/json"
                                        ],
                                        "title": "Content",
                                        "type": "object"
                                      },
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "content"
                                    ],
                                    "title": "Default",
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "default"
                                ],
                                "title": "Responses",
                                "type": "object"
                              },
                              "summary": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "summary",
                              "operationId",
                              "parameters",
                              "responses"
                            ],
                            "title": "Get",
                            "type": "object"
                          }
                        },
                        "required": [
                          "get"
                        ],
                        "title": "Pets",
                        "type": "object"
                      }
                    },
                    "required": [
                      "/pets"
                    ],
                    "title": "Paths",
                    "type": "object"
                  },
                  "servers": {
                    "items": {
                      "example": {
                        "url": "http://petstore.swagger.io/v1"
                      },
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "title": "Server",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "openapi",
                  "info",
                  "servers",
                  "paths",
                  "components"
                ],
                "title": "Input",
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "input"
            ],
            "title": "ImportexternalAPIspecificationRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_3e45e6a2-ace8-4153-adab-fedc14785eb3",
          "name": "MergeaFork",
          "format": "JSON",
          "body": "{\n  \"strategy\": \"deleteSource\",\n  \"source\": \"{{source_collection_uid}}\",\n  \"destination\": \"{{destination_collection_uid}}\"\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_6e792d02-b517-4032-b3e1-8b21e918e096",
          "examples": {},
          "schema": {
            "example": {
              "destination": "{{destination_collection_uid}}",
              "source": "{{source_collection_uid}}",
              "strategy": "deleteSource"
            },
            "properties": {
              "destination": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "strategy": {
                "type": "string"
              }
            },
            "required": [
              "strategy",
              "source",
              "destination"
            ],
            "title": "MergeaForkRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_86be969d-88d2-4c56-bc66-a42b0b4530be",
          "name": "UpdateanAPI",
          "format": "JSON",
          "body": "{\n  \"api\": {\n    \"name\": \"New name\",\n    \"description\": \"This is an updated Description\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_cec2fe8b-d82f-4d37-a7be-6346be7dbfbd",
          "examples": {},
          "schema": {
            "example": {
              "api": {
                "description": "This is an updated Description",
                "name": "New name"
              }
            },
            "properties": {
              "api": {
                "example": {
                  "description": "This is an updated Description",
                  "name": "New name"
                },
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "description"
                ],
                "title": "Api2",
                "type": "object"
              }
            },
            "required": [
              "api"
            ],
            "title": "UpdateanAPIRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_18564999-8543-4987-806e-610016aff0c9",
          "name": "UpdateanAPIVersion",
          "format": "JSON",
          "body": "{\n  \"version\": {\n    \"name\": \"2.0\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_24ba0133-3645-4523-8525-aa5576d85ab5",
          "examples": {},
          "schema": {
            "example": {
              "version": {
                "name": "2.0"
              }
            },
            "properties": {
              "version": {
                "example": {
                  "name": "2.0"
                },
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Version2",
                "type": "object"
              }
            },
            "required": [
              "version"
            ],
            "title": "UpdateanAPIVersionRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_07c21ad1-d501-472c-982d-54684c1623a5",
          "name": "UpdateCollection",
          "format": "JSON",
          "body": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"_postman_id\": \"174bad7c-07e3-45f3-914f-36cf84e5586f\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_2e5fbc41-6514-4e59-baad-50e04ef01de8",
          "examples": {},
          "schema": {
            "example": {
              "collection": {
                "info": {
                  "_postman_id": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                  "description": "This is just a sample collection.",
                  "name": "Sample Collection {{$randomInt}}",
                  "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                },
                "item": [
                  {
                    "item": [
                      {
                        "name": "Sample POST Request",
                        "request": {
                          "body": {
                            "mode": "raw",
                            "raw": "{\"data\": \"123\"}"
                          },
                          "description": "This is a sample POST Request",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "method": "POST",
                          "url": "https://postman-echo.com/post"
                        }
                      }
                    ],
                    "name": "This is a folder"
                  },
                  {
                    "name": "Sample GET Request",
                    "request": {
                      "description": "This is a sample GET Request",
                      "method": "GET",
                      "url": "https://postman-echo/get"
                    }
                  }
                ]
              }
            },
            "properties": {
              "collection": {
                "example": {
                  "info": {
                    "_postman_id": "174bad7c-07e3-45f3-914f-36cf84e5586f",
                    "description": "This is just a sample collection.",
                    "name": "Sample Collection {{$randomInt}}",
                    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item": [
                    {
                      "item": [
                        {
                          "name": "Sample POST Request",
                          "request": {
                            "body": {
                              "mode": "raw",
                              "raw": "{\"data\": \"123\"}"
                            },
                            "description": "This is a sample POST Request",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "method": "POST",
                            "url": "https://postman-echo.com/post"
                          }
                        }
                      ],
                      "name": "This is a folder"
                    },
                    {
                      "name": "Sample GET Request",
                      "request": {
                        "description": "This is a sample GET Request",
                        "method": "GET",
                        "url": "https://postman-echo/get"
                      }
                    }
                  ]
                },
                "properties": {
                  "info": {
                    "example": {
                      "_postman_id": "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                      "description": "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                      "name": "Sample Collection",
                      "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
                    },
                    "properties": {
                      "_postman_id": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "_postman_id",
                      "description",
                      "schema"
                    ],
                    "title": "Info",
                    "type": "object"
                  },
                  "item": {
                    "items": {
                      "example": {
                        "item": [
                          {
                            "name": "Sample POST Request",
                            "request": {
                              "body": {
                                "mode": "raw",
                                "raw": "{\"data\": \"123\"}"
                              },
                              "description": "This is a sample POST Request",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "method": "POST",
                              "url": "https://postman-echo.com/post"
                            }
                          }
                        ],
                        "name": "This is a folder"
                      },
                      "properties": {
                        "item": {
                          "items": {
                            "example": {
                              "name": "Sample POST Request",
                              "request": {
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\"data\": \"123\"}"
                                },
                                "description": "This is a sample POST Request",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  }
                                ],
                                "method": "POST",
                                "url": "https://postman-echo.com/post"
                              }
                            },
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "request": {
                                "example": {
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\"data\": \"123\"}"
                                  },
                                  "description": "This is a sample POST Request",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "method": "POST",
                                  "url": "https://postman-echo.com/post"
                                },
                                "properties": {
                                  "body": {
                                    "example": {
                                      "mode": "raw",
                                      "raw": "{\"data\": \"123\"}"
                                    },
                                    "properties": {
                                      "mode": {
                                        "type": "string"
                                      },
                                      "raw": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "mode",
                                      "raw"
                                    ],
                                    "title": "Body1",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "header": {
                                    "items": {
                                      "example": {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "value"
                                      ],
                                      "title": "Header1",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "method": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url",
                                  "method",
                                  "header",
                                  "body",
                                  "description"
                                ],
                                "title": "Request1",
                                "type": "object"
                              }
                            },
                            "required": [
                              "name",
                              "request"
                            ],
                            "title": "Item2",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "name": {
                          "type": "string"
                        },
                        "request": {
                          "example": {
                            "description": "This is a sample GET Request",
                            "method": "GET",
                            "url": "https://postman-echo/get"
                          },
                          "properties": {
                            "description": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url",
                            "method",
                            "description"
                          ],
                          "title": "Request2",
                          "type": "object"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Item1",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "info",
                  "item"
                ],
                "title": "Collection4",
                "type": "object"
              }
            },
            "required": [
              "collection"
            ],
            "title": "UpdateCollectionRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_ab9cbdd3-87b8-446c-a44b-012b9b7dbf1c",
          "name": "UpdateEnvironment",
          "format": "JSON",
          "body": "{\n  \"environment\": {\n    \"name\": \"New Name\",\n    \"values\": [\n      {\n        \"key\": \"name\",\n        \"value\": \"Bruce Wayne\"\n      },\n      {\n        \"key\": \"occupation\",\n        \"value\": \"Vigilante\"\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_95070f71-96b9-48c8-b347-dd912297c28e",
          "examples": {},
          "schema": {
            "example": {
              "environment": {
                "name": "New Name",
                "values": [
                  {
                    "key": "name",
                    "value": "Bruce Wayne"
                  },
                  {
                    "key": "occupation",
                    "value": "Vigilante"
                  }
                ]
              }
            },
            "properties": {
              "environment": {
                "example": {
                  "name": "Sample Environment Name (required)",
                  "values": [
                    {
                      "key": "variable_name_1",
                      "value": "The value of the variable"
                    },
                    {
                      "key": "variable_name_2",
                      "value": ""
                    }
                  ]
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "values": {
                    "items": {
                      "example": {
                        "key": "variable_name_1",
                        "value": "The value of the variable"
                      },
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ],
                      "title": "Value1",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "values"
                ],
                "title": "Environment2",
                "type": "object"
              }
            },
            "required": [
              "environment"
            ],
            "title": "UpdateEnvironmentRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_1886f0a8-5a55-4c27-bd35-994c35f7b447",
          "name": "UpdateMonitor",
          "format": "JSON",
          "body": "{\n  \"monitor\": {\n    \"name\": \"Updated Monitor Name\",\n    \"schedule\": {\n      \"cron\": \"*/5 * * * *\",\n      \"timezone\": \"America/Chicago\"\n    }\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_e889ab8e-3593-48db-876d-35c4e68536be",
          "examples": {},
          "schema": {
            "example": {
              "monitor": {
                "name": "Updated Monitor Name",
                "schedule": {
                  "cron": "*/5 * * * *",
                  "timezone": "America/Chicago"
                }
              }
            },
            "properties": {
              "monitor": {
                "example": {
                  "name": "Updated Monitor Name",
                  "schedule": {
                    "cron": "*/5 * * * *",
                    "timezone": "America/Chicago"
                  }
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "schedule": {
                    "example": {
                      "cron": "0 0 * * *",
                      "timezone": "Asia/Kolkata"
                    },
                    "properties": {
                      "cron": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cron",
                      "timezone"
                    ],
                    "title": "Schedule1",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "schedule"
                ],
                "title": "Monitor4",
                "type": "object"
              }
            },
            "required": [
              "monitor"
            ],
            "title": "UpdateMonitorRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_f09a350a-e4a9-4a41-ab2e-6718655a075d",
          "name": "UpdateSchema",
          "format": "JSON",
          "body": "{\n  \"schema\": {\n    \"language\": \"yaml\",\n    \"schema\": \"new schema\",\n    \"type\": \"openapi3\"\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_607e6b6c-514a-42ba-86e6-6defee9a77b9",
          "examples": {},
          "schema": {
            "example": {
              "schema": {
                "language": "yaml",
                "schema": "new schema",
                "type": "openapi3"
              }
            },
            "properties": {
              "schema": {
                "example": {
                  "language": "yaml",
                  "schema": "{}",
                  "type": "openapi3"
                },
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "schema": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "language",
                  "schema",
                  "type"
                ],
                "title": "Schema2",
                "type": "object"
              }
            },
            "required": [
              "schema"
            ],
            "title": "UpdateSchemaRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        },
        {
          "id": "apipayload_deab32ed-1936-4bb8-aefe-4f32c50e8370",
          "name": "UpdateWorkspace",
          "format": "JSON",
          "body": "{\n  \"workspace\": {\n    \"name\": \"New Workspace updated\",\n    \"description\": \"Some description\",\n    \"collections\": [\n      {\n        \"id\": \"e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\",\n        \"name\": \"Straw hats\",\n        \"uid\": \"8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d\"\n      }\n    ],\n    \"environments\": [\n      {\n        \"id\": \"83a1aaa2-a204-4bd8-9b92-4d486918906b\",\n        \"name\": \"env\",\n        \"uid\": \"8154-83a1aaa2-a204-4bd8-9b92-4d486918906b\"\n      }\n    ],\n    \"mocks\": [\n      {\n        \"id\": \"cda672ef-1375-40e9-baee-e20ece8d7b65\"\n      }\n    ],\n    \"monitors\": [\n      {\n        \"id\": \"1e889bd2-3862-4be0-b2c2-9b1fe9673aec\"\n      }\n    ]\n  }\n}",
          "headers": null,
          "description": "",
          "type": "apipayload",
          "statusCode": null,
          "apiendpoint": "apiendpoint_5b30b7fa-dfe3-4673-92ba-233ae1b4af4a",
          "examples": {},
          "schema": {
            "example": {
              "workspace": {
                "collections": [
                  {
                    "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                    "name": "Straw hats",
                    "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                  }
                ],
                "description": "Some description",
                "environments": [
                  {
                    "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                    "name": "env",
                    "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                  }
                ],
                "mocks": [
                  {
                    "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                  }
                ],
                "monitors": [
                  {
                    "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                  }
                ],
                "name": "New Workspace updated"
              }
            },
            "properties": {
              "workspace": {
                "example": {
                  "collections": [
                    {
                      "id": "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                      "name": "Straw hats",
                      "uid": "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                    }
                  ],
                  "description": "Some description",
                  "environments": [
                    {
                      "id": "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                      "name": "env",
                      "uid": "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                    }
                  ],
                  "mocks": [
                    {
                      "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                    }
                  ],
                  "monitors": [
                    {
                      "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                    }
                  ],
                  "name": "New Workspace updated"
                },
                "properties": {
                  "collections": {
                    "items": {
                      "example": {
                        "id": "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name": "Sample Collection",
                        "uid": "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Collection3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "environments": {
                    "items": {
                      "example": {
                        "id": "f158266e-306b-4702-a2b9-e4ede7878b7a",
                        "name": "Sample Environment Name (required)",
                        "uid": "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "uid"
                      ],
                      "title": "Environment3",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "mocks": {
                    "items": {
                      "example": {
                        "id": "cda672ef-1375-40e9-baee-e20ece8d7b65"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "title": "Mock5",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "monitors": {
                    "items": {
                      "example": {
                        "id": "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                      },
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "title": "Monitor7",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "collections",
                  "environments",
                  "mocks",
                  "monitors"
                ],
                "title": "Workspace4",
                "type": "object"
              }
            },
            "required": [
              "workspace"
            ],
            "title": "UpdateWorkspaceRequest",
            "type": "object"
          },
          "__typename": "ResponsePayload"
        }
      ],
      "groups": [
        {
          "id": "apigroup_1f0b0677-672c-4a94-87db-19a3dc2015fa",
          "name": "Workspaces",
          "index": 4,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_7c569cab-c1ef-4282-9a87-ed866d19ce82",
          "name": "API",
          "index": 10,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_be2f8c0c-ac6e-47ce-9c36-e6ae72e38991",
          "name": "mocks",
          "index": 13,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_2d2857e1-b903-491d-90fc-22d6bcab61e6",
          "name": "me",
          "index": 16,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_a9938f9f-137a-436b-ad66-3d66d1122001",
          "name": "Monitors",
          "index": 3,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_ed6ce896-be5e-46d7-86b7-13402299fbf6",
          "name": "Relations",
          "index": 9,
          "description": "This contains requests related to relations.",
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_7f93efca-ef87-4a1a-ab77-f16d00cfe084",
          "name": "Import",
          "index": 6,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_fb2a3eff-261c-4489-8bec-a1876e5b73f9",
          "name": "workspaces",
          "index": 15,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_39fda286-cc72-44ff-bd11-107c5fbf330c",
          "name": "Schema",
          "index": 8,
          "description": "This folder contains all the endpoints related to Schemas.",
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_462459c2-d2dd-4813-be06-247acc1b1ada",
          "name": "API Version",
          "index": 7,
          "description": "This folder contains the requests around API versions.",
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_bca374c0-c9bc-468b-862d-584d476b9f19",
          "name": "apis",
          "index": 18,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_daef3ba8-4f33-49e5-83cb-aefcc779edf4",
          "name": "Mocks",
          "index": 2,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_f7dc073f-f0f0-4d9e-b455-d2b6df20dbed",
          "name": "import",
          "index": 17,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_25dd016b-b7cc-4c09-9239-7f0b18b26acb",
          "name": "collections",
          "index": 11,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_887876e3-21cb-4f85-b71b-ed83cac74848",
          "name": "environments",
          "index": 12,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_320d62ea-761d-4681-abc7-38c10bcadf08",
          "name": "Collections",
          "index": 0,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_538221a8-aafd-403d-9245-0ac57816757c",
          "name": "Environments",
          "index": 1,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_399d3ff0-e87b-462e-bd62-67dfac409060",
          "name": "User",
          "index": 5,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        },
        {
          "id": "apigroup_32cd8274-2c39-4639-a5bb-248857bebc5b",
          "name": "monitors",
          "index": 14,
          "description": null,
          "summary": null,
          "externalDocs": null,
          "__typename": "EndpointsGroup"
        }
      ],
      "publicdns": [
        {
          "proxyMode": "",
          "address": "postman6.p.rapidapi.com",
          "current": true,
          "id": "publicdns_81d7dd99-808f-4a3b-bb84-e9a0e2345dc6",
          "__typename": "Publicdns"
        }
      ]
    }
  }
}